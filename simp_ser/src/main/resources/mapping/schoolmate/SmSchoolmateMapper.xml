<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mpri.aio.schoolmate.mapper.SmSchoolmateMapper">

    <!-- 基础返回值定义 -->
    <resultMap id="BaseResultMap" type="com.mpri.aio.schoolmate.model.SmSchoolmate">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="complete" jdbcType="INTEGER" property="complete"/>
        <result column="mark_ids" jdbcType="VARCHAR" property="markIds"/>
        <result column="pos_lat" jdbcType="VARCHAR" property="posLat"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="marks" jdbcType="VARCHAR" property="marks"/>
        <result column="pos_long" jdbcType="VARCHAR" property="posLong"/>
        <result column="don_fee" jdbcType="DECIMAL" property="donFee"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="birthday" jdbcType="TIMESTAMP" property="birthday"/>
        <result column="eg_name" jdbcType="VARCHAR" property="egName"/>
        <result column="nation" jdbcType="VARCHAR" property="nation"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="card_id" jdbcType="VARCHAR" property="cardId"/>
        <result column="flag" jdbcType="VARCHAR" property="flag"/>
        <result column="openid" jdbcType="VARCHAR" property="openid"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="card_num" jdbcType="VARCHAR" property="cardNum"/>
        <result column="pinyin" jdbcType="VARCHAR" property="pinyin"/>
        <result column="true_photo" jdbcType="VARCHAR" property="truePhoto"/>
        <result column="card_status" jdbcType="VARCHAR" property="cardStatus"/>
        <result column="is_show" jdbcType="VARCHAR" property="isShow"/>
        <result column="point" jdbcType="INTEGER" property="point"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="card_type" jdbcType="VARCHAR" property="cardType"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
        <result column="pos_city" jdbcType="VARCHAR" property="posCity"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="politics" jdbcType="VARCHAR" property="politics"/>
        <association property="smAddress"
                     javaType="com.mpri.aio.schoolmate.model.SmAddress">
            <id column="smAddress_id" jdbcType="VARCHAR" property="id"/>
            <result column="smAddress_province" jdbcType="VARCHAR" property="province"/>
            <result column="smAddress_city" jdbcType="VARCHAR" property="city"/>
            <result column="smAddress_country" jdbcType="VARCHAR" property="country"/>
            <result column="smAddress_type" jdbcType="VARCHAR" property="type"/>
            <result column="smAddress_detail" jdbcType="VARCHAR" property="detail"/>
            <result column="smAddress_zipcode" jdbcType="VARCHAR" property="zipcode"/>
            <result column="smAddress_district" jdbcType="VARCHAR" property="district"/>
        </association>
        <association property="smContact"
                     javaType="com.mpri.aio.schoolmate.model.SmContact">
            <id property="id" column="smContact_id"/>
            <result column="smContact_type" jdbcType="VARCHAR" property="type"/>
            <result column="smContact_contact" jdbcType="VARCHAR" property="contact"/>
            <result column="C_IS_DEFAULT" jdbcType="VARCHAR" property="isDefault"/>
        </association>
        <association property="smEducation" javaType="com.mpri.aio.schoolmate.model.SmEducation">
            <id column="smEdu_id" jdbcType="VARCHAR" property="id"/>
            <result column="edu_model" jdbcType="VARCHAR" property="eduModel"/>
            <result column="school" jdbcType="VARCHAR" property="school"/>
            <result column="college" jdbcType="VARCHAR" property="college"/>
            <result column="series" jdbcType="VARCHAR" property="series"/>
            <result column="specialty" jdbcType="VARCHAR" property="specialty"/>
            <result column="edu_type" jdbcType="VARCHAR" property="eduType"/>
            <result column="edu_record" jdbcType="VARCHAR" property="eduRecord"/>
            <result column="degree_type" jdbcType="VARCHAR" property="degreeType"/>
            <result column="temp_specialty" jdbcType="VARCHAR" property="tempSpecialty"/>
            <result column="classes" jdbcType="VARCHAR" property="classes"/>
            <result column="edu_enddate" jdbcType="TIMESTAMP" property="enddate"/>
            <result column="edu_startdate" jdbcType="TIMESTAMP" property="startdate"/>
            <result column="student_no" jdbcType="VARCHAR" property="studentNo"/>
            <result column="temp_series" jdbcType="VARCHAR" property="tempSeries"/>
            <result column="schoollen" jdbcType="VARCHAR" property="schoollen"/>
            <result column="degree" jdbcType="VARCHAR" property="degree"/>
        </association>
        <association property="smFamily"
                     javaType="com.mpri.aio.schoolmate.model.SmFamily">
            <id column="smFam_id" jdbcType="VARCHAR" property="id"/>
            <result column="smFam_name" jdbcType="VARCHAR" property="name"/>
            <result column="smFam_phone" jdbcType="VARCHAR" property="phone"/>
            <result column="smFam_profession" jdbcType="VARCHAR" property="profession"/>
            <result column="smFam_birthday" jdbcType="TIMESTAMP" property="birthday"/>
            <result column="smFam_relation" jdbcType="VARCHAR" property="relation"/>
            <result column="smFam_sex" jdbcType="VARCHAR" property="sex"/>
            <result column="smFam_isschool" jdbcType="VARCHAR" property="isschool"/>
            <result column="smFam_workplace" jdbcType="VARCHAR" property="workplace"/>
        </association>
        <association property="smExperience" javaType="com.mpri.aio.schoolmate.model.SmExperience">
            <id column="smExper_id" jdbcType="VARCHAR" property="id"/>
            <result column="smExper_name" jdbcType="VARCHAR" property="name"/>
            <result column="smExper_position" jdbcType="VARCHAR" property="position"/>
            <result column="smExper_content" jdbcType="VARCHAR" property="content"/>
            <result column="smExper_start_date" jdbcType="TIMESTAMP" property="startDate"/>
            <result column="smExper_end_date" jdbcType="TIMESTAMP" property="endDate"/>
        </association>
        <association property="smHonor"
                     javaType="com.mpri.aio.schoolmate.model.SmHonor">
            <id column="smHon_id" jdbcType="VARCHAR" property="id"/>
            <result column="smHon_infoval" jdbcType="VARCHAR" property="infoval"/>
            <result column="smHon_name" jdbcType="VARCHAR" property="name"/>
            <result column="smHon_type" jdbcType="VARCHAR" property="type"/>
            <result column="smHon_date" jdbcType="TIMESTAMP" property="date"/>
            <result column="smHon_industry" jdbcType="VARCHAR" property="industry"/>
        </association>
        <association property="smProfession"
                     javaType="com.mpri.aio.schoolmate.model.SmProfession">
            <id column="smProfe_id" jdbcType="VARCHAR" property="id"/>
            <result column="smProfe_district" jdbcType="VARCHAR" property="district"/>
            <result column="smProfe_province" jdbcType="VARCHAR" property="province"/>
            <result column="smProfe_end_date" jdbcType="TIMESTAMP" property="endDate"/>
            <result column="smProfe_fax" jdbcType="VARCHAR" property="fax"/>
            <result column="smProfe_start_date" jdbcType="TIMESTAMP" property="startDate"/>
            <result column="smProfe_city" jdbcType="VARCHAR" property="city"/>
            <result column="smProfe_status" jdbcType="VARCHAR" property="status"/>
            <result column="smProfe_country" jdbcType="VARCHAR" property="country"/>
            <result column="smProfe_telephone" jdbcType="VARCHAR" property="telephone"/>
            <result column="smProfe_industry" jdbcType="VARCHAR" property="industry"/>
            <result column="smProfe_department" jdbcType="VARCHAR" property="department"/>
            <result column="smProfe_nature" jdbcType="VARCHAR" property="nature"/>
            <result column="smProfe_workplace" jdbcType="VARCHAR" property="workplace"/>
            <result column="smProfe_detail" jdbcType="VARCHAR" property="detail"/>
            <result column="smProfe_position" jdbcType="VARCHAR" property="position"/>
        </association>
        <association property="smSocial"
                     javaType="com.mpri.aio.schoolmate.model.SmSocial">
            <id column="smSoci_id" jdbcType="VARCHAR" property="id"/>
            <result column="smSoci_name" jdbcType="VARCHAR" property="name"/>
            <result column="smSoci_position" jdbcType="VARCHAR" property="position"/>
            <result column="smSoci_startdate" jdbcType="TIMESTAMP" property="startdate"/>
            <result column="smSoci_enddate" jdbcType="TIMESTAMP" property="enddate"/>
            <result column="smSoci_status" jdbcType="VARCHAR" property="status"/>
            <result column="smSoci_infoval" jdbcType="VARCHAR" property="infoval"/>
        </association>
        <association property="smPolitic"
                     javaType="com.mpri.aio.schoolmate.model.SmPolitics">
            <id column="smPoli_id" jdbcType="VARCHAR" property="id"/>
            <result column="smPoli_name" jdbcType="VARCHAR" property="name"/>
            <result column="smPoli_position" jdbcType="VARCHAR" property="position"/>
            <result column="smPoli_startdate" jdbcType="TIMESTAMP" property="startdate"/>
            <result column="smPoli_enddate" jdbcType="TIMESTAMP" property="enddate"/>
            <result column="smPoli_type" jdbcType="VARCHAR" property="type"/>
            <result column="smPoli_infoval" jdbcType="VARCHAR" property="infoval"/>
        </association>
        <association property="smHistorydata"
                     javaType="com.mpri.aio.schoolmate.model.SmHistorydata">
            <id column="smHist_id" jdbcType="VARCHAR" property="id"/>
            <result column="smHist_join_date" jdbcType="TIMESTAMP" property="joinDate"/>
            <result column="smHist_native_adress" jdbcType="VARCHAR" property="nativeAdress"/>
            <result column="smHist_other_degree" jdbcType="VARCHAR" property="otherDegree"/>
            <result column="smHist_before_school_unit" jdbcType="VARCHAR" property="beforeSchoolunit"/>
            <result column="smHist_other_school" jdbcType="VARCHAR" property="otherSchool"/>
            <result column="smHist_other_specialty" jdbcType="VARCHAR" property="otherSpecialty"/>
            <result column="smHist_degree_date" jdbcType="TIMESTAMP" property="degreeDate"/>
            <result column="smHist_person_love" jdbcType="VARCHAR" property="personLove"/>
            <result column="smHist_trust_unit" jdbcType="VARCHAR" property="trustUnit"/>
        </association>
        <association property="sysUser"
                     javaType="com.mpri.aio.system.model.SysUser">
            <id column="sysUserId" jdbcType="VARCHAR" property="id"/>
            <result column="username" jdbcType="VARCHAR" property="username"/>
        </association>
        <collection property="markList" javaType="ArrayList" ofType="com.mpri.aio.schoolmate.model.SmMark">
            <id property="id" column="mark_id"/>
            <result property="name" column="mark_name"/>
        </collection>
        <collection property="smEducations" javaType="com.mpri.aio.schoolmate.model.SmEducation">
            <id column="smEdu_id" jdbcType="VARCHAR" property="id"/>
            <result column="edu_model" jdbcType="VARCHAR" property="eduModel"/>
            <result column="school" jdbcType="VARCHAR" property="school"/>
            <result column="college" jdbcType="VARCHAR" property="college"/>
            <result column="series" jdbcType="VARCHAR" property="series"/>
            <result column="specialty" jdbcType="VARCHAR" property="specialty"/>
            <result column="edu_type" jdbcType="VARCHAR" property="eduType"/>
            <result column="edu_record" jdbcType="VARCHAR" property="eduRecord"/>
            <result column="degree_type" jdbcType="VARCHAR" property="degreeType"/>
            <result column="temp_specialty" jdbcType="VARCHAR" property="tempSpecialty"/>
            <result column="classes" jdbcType="VARCHAR" property="classes"/>
            <result column="edu_enddate" jdbcType="TIMESTAMP" property="enddate"/>
            <result column="edu_startdate" jdbcType="TIMESTAMP" property="startdate"/>
            <result column="student_no" jdbcType="VARCHAR" property="studentNo"/>
            <result column="temp_series" jdbcType="VARCHAR" property="tempSeries"/>
            <result column="schoollen" jdbcType="VARCHAR" property="schoollen"/>
            <result column="degree" jdbcType="VARCHAR" property="degree"/>
        </collection>
        <collection property="smFamilies" javaType="com.mpri.aio.schoolmate.model.SmFamily">
            <id column="smFam_id" jdbcType="VARCHAR" property="id"/>
            <result column="smFam_name" jdbcType="VARCHAR" property="name"/>
            <result column="smFam_phone" jdbcType="VARCHAR" property="phone"/>
            <result column="smFam_profession" jdbcType="VARCHAR" property="profession"/>
            <result column="smFam_birthday" jdbcType="TIMESTAMP" property="birthday"/>
            <result column="smFam_relation" jdbcType="VARCHAR" property="relation"/>
            <result column="smFam_sex" jdbcType="VARCHAR" property="sex"/>
            <result column="smFam_isschool" jdbcType="VARCHAR" property="isschool"/>
            <result column="smFam_workplace" jdbcType="VARCHAR" property="workplace"/>
        </collection>
        <collection property="smContacts" javaType="com.mpri.aio.schoolmate.model.SmContact">
            <id column="smContact_id" jdbcType="VARCHAR" property="id"/>
            <result column="smContact_type" jdbcType="VARCHAR" property="type"/>
            <result column="smContact_contact" jdbcType="VARCHAR" property="contact"/>
        </collection>
        <collection property="smExperiences" javaType="com.mpri.aio.schoolmate.model.SmExperience">
            <id column="smExper_id" jdbcType="VARCHAR" property="id"/>
            <result column="smExper_name" jdbcType="VARCHAR" property="name"/>
            <result column="smExper_position" jdbcType="VARCHAR" property="position"/>
            <result column="smExper_content" jdbcType="VARCHAR" property="content"/>
            <result column="smExper_start_date" jdbcType="TIMESTAMP" property="startDate"/>
            <result column="smExper_end_date" jdbcType="TIMESTAMP" property="endDate"/>
        </collection>
        <collection property="smAddresses" javaType="com.mpri.aio.schoolmate.model.SmAddress">
            <id column="smAddress_id" jdbcType="VARCHAR" property="id"/>
            <result column="smAddress_province" jdbcType="VARCHAR" property="province"/>
            <result column="smAddress_city" jdbcType="VARCHAR" property="city"/>
            <result column="smAddress_country" jdbcType="VARCHAR" property="country"/>
            <result column="smAddress_type" jdbcType="VARCHAR" property="type"/>
            <result column="smAddress_detail" jdbcType="VARCHAR" property="detail"/>
            <result column="smAddress_zipcode" jdbcType="VARCHAR" property="zipcode"/>
            <result column="smAddress_district" jdbcType="VARCHAR" property="district"/>
        </collection>
        <collection property="smHonors" javaType="com.mpri.aio.schoolmate.model.SmHonor">
            <id column="smHon_id" jdbcType="VARCHAR" property="id"/>
            <result column="smHon_infoval" jdbcType="VARCHAR" property="infoval"/>
            <result column="smHon_name" jdbcType="VARCHAR" property="name"/>
            <result column="smHon_type" jdbcType="VARCHAR" property="type"/>
            <result column="smHon_date" jdbcType="TIMESTAMP" property="date"/>
            <result column="smHon_industry" jdbcType="VARCHAR" property="industry"/>
        </collection>
        <collection property="smProfessions" javaType="com.mpri.aio.schoolmate.model.SmProfession">
            <id column="smProfe_id" jdbcType="VARCHAR" property="id"/>
            <result column="smProfe_district" jdbcType="VARCHAR" property="district"/>
            <result column="smProfe_province" jdbcType="VARCHAR" property="province"/>
            <result column="smProfe_end_date" jdbcType="TIMESTAMP" property="endDate"/>
            <result column="smProfe_fax" jdbcType="VARCHAR" property="fax"/>
            <result column="smProfe_start_date" jdbcType="TIMESTAMP" property="startDate"/>
            <result column="smProfe_city" jdbcType="VARCHAR" property="city"/>
            <result column="smProfe_status" jdbcType="VARCHAR" property="status"/>
            <result column="smProfe_country" jdbcType="VARCHAR" property="country"/>
            <result column="smProfe_telephone" jdbcType="VARCHAR" property="telephone"/>
            <result column="smProfe_industry" jdbcType="VARCHAR" property="industry"/>
            <result column="smProfe_department" jdbcType="VARCHAR" property="department"/>
            <result column="smProfe_nature" jdbcType="VARCHAR" property="nature"/>
            <result column="smProfe_workplace" jdbcType="VARCHAR" property="workplace"/>
            <result column="smProfe_detail" jdbcType="VARCHAR" property="detail"/>
            <result column="smProfe_position" jdbcType="VARCHAR" property="position"/>
        </collection>
        <collection property="smSocials" javaType="com.mpri.aio.schoolmate.model.SmSocial">
            <id column="smSoci_id" jdbcType="VARCHAR" property="id"/>
            <result column="smSoci_name" jdbcType="VARCHAR" property="name"/>
            <result column="smSoci_position" jdbcType="VARCHAR" property="position"/>
            <result column="smSoci_startdate" jdbcType="TIMESTAMP" property="startdate"/>
            <result column="smSoci_enddate" jdbcType="TIMESTAMP" property="enddate"/>
            <result column="smSoci_status" jdbcType="VARCHAR" property="status"/>
            <result column="smSoci_infoval" jdbcType="VARCHAR" property="infoval"/>
        </collection>
        <collection property="smPolitics" javaType="com.mpri.aio.schoolmate.model.SmPolitics">
            <id column="smPoli_id" jdbcType="VARCHAR" property="id"/>
            <result column="smPoli_name" jdbcType="VARCHAR" property="name"/>
            <result column="smPoli_position" jdbcType="VARCHAR" property="position"/>
            <result column="smPoli_startdate" jdbcType="TIMESTAMP" property="startdate"/>
            <result column="smPoli_enddate" jdbcType="TIMESTAMP" property="enddate"/>
            <result column="smPoli_type" jdbcType="VARCHAR" property="type"/>
            <result column="smPoli_infoval" jdbcType="VARCHAR" property="infoval"/>
        </collection>
        <collection property="smHistorydatas" javaType="com.mpri.aio.schoolmate.model.SmHistorydata">
            <id column="smHist_id" jdbcType="VARCHAR" property="id"/>
            <result column="smHist_join_date" jdbcType="TIMESTAMP" property="joinDate"/>
            <result column="smHist_native_adress" jdbcType="VARCHAR" property="nativeAdress"/>
            <result column="smHist_other_degree" jdbcType="VARCHAR" property="otherDegree"/>
            <result column="smHist_before_school_unit" jdbcType="VARCHAR" property="beforeSchoolunit"/>
            <result column="smHist_other_school" jdbcType="VARCHAR" property="otherSchool"/>
            <result column="smHist_other_specialty" jdbcType="VARCHAR" property="otherSpecialty"/>
            <result column="smHist_degree_date" jdbcType="TIMESTAMP" property="degreeDate"/>
            <result column="smHist_person_love" jdbcType="VARCHAR" property="personLove"/>
            <result column="smHist_trust_unit" jdbcType="VARCHAR" property="trustUnit"/>
        </collection>
    </resultMap>

    <resultMap id="ProResultMap" type="com.mpri.aio.schoolmate.model.SmProfession">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="workplace" jdbcType="VARCHAR" property="workplace"/>
    </resultMap>
    <resultMap id="EduResultMap" type="com.mpri.aio.schoolmate.model.SmEducation">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="series" jdbcType="VARCHAR" property="series"/>
        <result column="specialty" jdbcType="VARCHAR" property="specialty"/>
        <result column="college" jdbcType="VARCHAR" property="college"/>
        <result column="startdate" jdbcType="TIMESTAMP" property="startdate"/>
        <result column="edu_record" jdbcType="VARCHAR" property="eduRecord"/>
    </resultMap>

    <resultMap id="MesGroupSchoolmateMap" type="com.mpri.aio.message.vo.MesGroupSchoolmates">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="contact" jdbcType="VARCHAR" property="contact"/>
    </resultMap>

    <select id="getEdu" parameterType="com.mpri.aio.schoolmate.model.SmEducation" resultMap="EduResultMap">
		select  id,series,specialty,college,startdate,edu_record  from  sm_education where flag =  'NORMAL' and user_id =#{userId} ORDER BY startdate asc limit 1
	</select>
    <select id="getPro" parameterType="com.mpri.aio.schoolmate.model.SmProfession" resultMap="ProResultMap">
		select id,workplace from sm_profession where flag = 'NORMAL' and user_id =#{userId} and status= 'JOIN_IN' ORDER BY create_date desc limit 1
	</select>

    <resultMap id="PageResultMap" type="com.mpri.aio.schoolmate.model.SmSchoolmate">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="marks" jdbcType="VARCHAR" property="marks"/>
        <result column="true_photo" jdbcType="VARCHAR" property="truePhoto"/>
        <association property="smEducation" column="user_id" select="getEdu"/>
        <association property="smProfession" column="user_id" select="getPro"/>
    </resultMap>

    <resultMap id="SchoolmatInfoResultMap" type="com.mpri.aio.webber.vo.SchoolmateInfoVo"><!--校友网使用-->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="marks" jdbcType="VARCHAR" property="marks"/>
        <result column="true_photo" jdbcType="VARCHAR" property="truePhoto"/>
        <association property="smEducation" column="user_id" select="getEdu"/>
        <association property="smProfession" column="user_id" select="getPro"/>
    </resultMap>

    <resultMap id="ExportProResultMap" type="com.mpri.aio.schoolmate.model.SmProfession">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="industry" jdbcType="VARCHAR" property="industry"/>
        <result column="nature" jdbcType="VARCHAR" property="nature"/>
        <result column="workplace" jdbcType="VARCHAR" property="workplace"/>
        <result column="position" jdbcType="VARCHAR" property="position"/>
        <result column="country" jdbcType="VARCHAR" property="country"/>
        <result column="province" jdbcType="VARCHAR" property="province"/>
        <result column="city" jdbcType="VARCHAR" property="city"/>
    </resultMap>
    <resultMap id="ExportEduResultMap" type="com.mpri.aio.schoolmate.model.SmSchoolmate">
        <collection property="smEducations" javaType="com.mpri.aio.schoolmate.model.SmEducation">
            <id column="id" jdbcType="VARCHAR" property="id"/>
            <result column="academy" jdbcType="VARCHAR" property="academy"/>
            <result column="school" jdbcType="VARCHAR" property="school"/>
            <result column="college" jdbcType="VARCHAR" property="college"/>
            <result column="series" jdbcType="VARCHAR" property="series"/>
            <result column="specialty" jdbcType="VARCHAR" property="specialty"/>
            <result column="edu_record" jdbcType="VARCHAR" property="eduRecord"/>
            <result column="classes" jdbcType="VARCHAR" property="classes"/>
            <result column="edu_enddate" jdbcType="TIMESTAMP" property="enddate"/>
            <result column="edu_startdate" jdbcType="TIMESTAMP" property="startdate"/>
            <result column="degree" jdbcType="VARCHAR" property="degree"/>
        </collection>
    </resultMap>
    <resultMap id="ExportAddResultMap" type="com.mpri.aio.schoolmate.model.SmAddress">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="province" jdbcType="VARCHAR" property="province"/>
        <result column="city" jdbcType="VARCHAR" property="city"/>
        <result column="country" jdbcType="VARCHAR" property="country"/>
        <result column="district" jdbcType="VARCHAR" property="district"/>
        <result column="detail" jdbcType="VARCHAR" property="detail"/>
        <result column="zipcode" jdbcType="VARCHAR" property="zipcode"/>
    </resultMap>
    <resultMap id="ExportContResultMap" type="com.mpri.aio.schoolmate.model.SmSchoolmate">
        <collection property="smContacts" javaType="com.mpri.aio.schoolmate.model.SmContact">
            <id column="id" jdbcType="VARCHAR" property="id"/>
            <result column="type" jdbcType="VARCHAR" property="type"/>
            <result column="contact" jdbcType="VARCHAR" property="contact"/>
        </collection>
    </resultMap>
	
	<!-- 导出联系方式 -->
    <resultMap id="ExportContactResultMap" type="com.mpri.aio.schoolmate.model.SmContact">
            <id column="id" jdbcType="VARCHAR" property="id"/>
            <result column="type" jdbcType="VARCHAR" property="type"/>
            <result column="contact" jdbcType="VARCHAR" property="contact"/>
            <result jdbcType="VARCHAR" column="name" property="name"/>
    </resultMap>

    <select id="getExportEdu" parameterType="com.mpri.aio.schoolmate.model.SmEducation"
            resultType="com.mpri.aio.schoolmate.model.SmEducation">
		select  id,startdate ,enddate ,edu_record,degree,college,series,specialty,classes,academy,create_date
		  from  sm_education where flag =  'NORMAL' and user_id =#{userId} ORDER BY startdate asc
	</select>
    <select id="getExportPro" parameterType="com.mpri.aio.schoolmate.model.SmProfession" resultMap="ExportProResultMap">
		select id,country,province,city,industry,nature,workplace,position,create_date
		from sm_profession where flag = 'NORMAL' and user_id =#{userId} ORDER BY status is null,status ='',status asc limit 1
	</select>
    <select id="getExportAdd" parameterType="com.mpri.aio.schoolmate.model.SmAddress" resultMap="ExportAddResultMap">
		select id, country,province, city,district,detail,zipcode
		from sm_address where flag = 'NORMAL' and user_id =#{userId}  ORDER BY type is null,type ='',type='IS_FIRSTADDRESS' desc  limit 1
	</select>
    <select id="getExportCont" parameterType="com.mpri.aio.schoolmate.model.SmContact"
            resultType="com.mpri.aio.schoolmate.model.SmContact">
		select id,type,contact from sm_contact where flag = 'NORMAL' and user_id =#{userId} ORDER BY create_date desc
	</select>
    <resultMap id="ExportResultMap" type="com.mpri.aio.schoolmate.model.SmSchoolmate">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="birthday" jdbcType="TIMESTAMP" property="birthday"/>
        <result column="marks" jdbcType="VARCHAR" property="marks"/>
        <association property="smProfession" column="user_id" select="getExportPro"/>
        <association property="smAddress" column="user_id" select="getExportAdd"/>
        <collection property="smContacts" column="user_id" select="getExportCont">
            <id column="id" jdbcType="VARCHAR" property="id"/>
            <result column="type" jdbcType="VARCHAR" property="type"/>
            <result column="contact" jdbcType="VARCHAR" property="contact"/>
        </collection>

        <collection property="smEducations" column="user_id" select="getExportEdu">
            <id column="id" jdbcType="VARCHAR" property="id"/>
            <result column="academy" jdbcType="VARCHAR" property="academy"/>
            <result column="school" jdbcType="VARCHAR" property="school"/>
            <result column="college" jdbcType="VARCHAR" property="college"/>
            <result column="series" jdbcType="VARCHAR" property="series"/>
            <result column="specialty" jdbcType="VARCHAR" property="specialty"/>
            <result column="edu_record" jdbcType="VARCHAR" property="eduRecord"/>
            <result column="classes" jdbcType="VARCHAR" property="classes"/>
            <result column="edu_enddate" jdbcType="TIMESTAMP" property="enddate"/>
            <result column="edu_startdate" jdbcType="TIMESTAMP" property="startdate"/>
            <result column="degree" jdbcType="VARCHAR" property="degree"/>
        </collection>
    </resultMap>
    <!-- 基础字段定义 -->
    <sql id="Base_Column_List">
    	sm_s.id, sm_s.complete, sm_s.mark_ids, sm_s.pos_lat, sm_s.create_date, sm_s.marks, sm_s.pos_long, sm_s.don_fee, sm_s.name, sm_s.remark, sm_s.birthday, sm_s.eg_name,
    	sm_s.nation, sm_s.sex, sm_s.card_id, sm_s.flag, sm_s.openid, sm_s.status, sm_s.card_num, sm_s.pinyin, sm_s.true_photo, sm_s.card_status,
    	 sm_s.is_show, sm_s.point, sm_s.type, sm_s.card_type, sm_s.level, sm_s.pos_city, sm_s.user_id,sm_s.politics
	</sql>

    <!-- 基础字段定义(带用户信息) -->
    <sql id="Info_Base_Column_List">
		sm_s.id, sm_s.complete, sm_s.mark_ids, sm_s.pos_lat, sm_s.create_date, sm_s.marks, sm_s.pos_long,politics,
		 sm_s.don_fee, sm_s.name, sm_s.remark, sm_s.birthday, sm_s.eg_name, sm_s.nation, sm_s.sex, sm_s.card_id,
		 sm_s.flag, sm_s.openid, sm_s.status, sm_s.card_num, sm_s.pinyin, true_photo, card_status,
		 sm_s.is_show, sm_s.point, sm_s.type, sm_s.card_type, sm_s.level, sm_s.pos_city, sm_s.user_id,
		sys_u.id as sysUserId ,sys_u.username as username
	</sql>

    <!-- 校友其他信息 基礎字段 -->
    <sql id="Info_All_Column_List">
		sm_s.id, sm_s.complete, sm_s.mark_ids, sm_s.pos_lat, sm_s.create_date, sm_s.marks, sm_s.pos_long, sm_s.don_fee, sm_s.name, sm_s.remark, sm_s.birthday, sm_s.eg_name,
		sm_s.nation, sm_s.sex, sm_s.card_id, sm_s.flag, sm_s.openid, sm_s.status, sm_s.card_num, sm_s.pinyin, sm_s.true_photo, sm_s.card_status,politics,
		sm_s.is_show, sm_s.point, sm_s.type, sm_s.card_type, sm_s.level, sm_s.pos_city, sm_s.user_id,

		sm_edu.id As smEdu_id, sm_edu.degree_type, sm_edu.temp_specialty, sm_edu.edu_model, sm_edu.school, sm_edu.edu_record, sm_edu.schoollen, sm_edu.edu_type, sm_edu.series, sm_edu.classes,
		sm_edu.enddate As edu_enddate, sm_edu.specialty, sm_edu.college, sm_edu.startdate As edu_startdate, sm_edu.student_no, sm_edu.degree, sm_edu.temp_series,

		sm_faml.id As smFam_id, sm_faml.name As smFam_name, sm_faml.phone As smFam_phone, sm_faml.profession As smFam_profession, sm_faml.birthday As smFam_birthday,
		sm_faml.relation As smFam_relation, sm_faml.sex As smFam_sex,sm_faml.isschool As smFam_isschool, sm_faml.workplace As smFam_workplace,

		sm_c.id As smContact_id,sm_c.type As smContact_type,sm_c.contact As smContact_contact,

		sm_exper.id As smExper_id, sm_exper.name As smExper_name, sm_exper.position As smExper_position,
		sm_exper.content As smExper_content,sm_exper.start_date As smExper_start_date, sm_exper.end_date As smExper_end_date,

		sm_add.id As smAddress_id, sm_add.province As smAddress_province, sm_add.city As smAddress_city, sm_add.country As smAddress_country,
		sm_add.type As smAddress_type,sm_add.detail As smAddress_detail, sm_add.zipcode As smAddress_zipcode, sm_add.district As smAddress_district,

		sm_hon.id As smHon_id, sm_hon.infoval As smHon_infoval, sm_hon.name As smHon_name,sm_hon.type as smHon_type,sm_hon.date As smHon_date, sm_hon.industry As smHon_industry,

		sm_p.id As smProfe_id, sm_p.district As smProfe_district, sm_p.province As smProfe_province, sm_p.end_date As smProfe_end_date,
		sm_p.fax As smProfe_fax, sm_p.start_date As smProfe_start_date, sm_p.city As smProfe_city, sm_p.status As smProfe_status,
		sm_p.country As smProfe_country, sm_p.telephone As smProfe_telephone, sm_p.industry As smProfe_industry,
		sm_p.department As smProfe_department, sm_p.nature As smProfe_nature, sm_p.workplace As smProfe_workplace, sm_p.detail As smProfe_detail, sm_p.position As smProfe_position,

		sm_soci.id As smSoci_id, sm_soci.name As smSoci_name, sm_soci.position As smSoci_position, sm_soci.startdate As smSoci_startdate, sm_soci.enddate As smSoci_enddate,
		sm_soci.status As smSoci_status,sm_soci.infoval As smSoci_infoval,

		sm_poli.id As smPoli_id, sm_poli.name As smPoli_name, sm_poli.position As smPoli_position, sm_poli.startdate As smPoli_startdate,
		sm_poli.enddate As smPoli_enddate, sm_poli.type As smPoli_type,sm_poli.infoval As smPoli_infoval,

		sm_his_da.id As smHist_id, sm_his_da.join_date As smHist_join_date ,sm_his_da.native_adress As smHist_native_adress,sm_his_da.other_degree as smHist_other_degree,
		sm_his_da.before_school_unit As smHist_before_school_unit,sm_his_da.other_school As smHist_other_school, sm_his_da.other_specialty As smHist_other_specialty,
		sm_his_da.degree_date As smHist_degree_date, sm_his_da.person_love As smHist_person_love, sm_his_da.trust_unit As smHist_trust_unit
	</sql>

    <!-- 查询条件定义 -->
    <sql id="query_where">
        <if test="entity!=null">
            <if test="entity.id != null and entity.id!='' ">
                and id=#{entity.id}
            </if>
            <if test="entity.complete != null and entity.complete!='' ">
                and complete=#{entity.complete}
            </if>
            <if test="entity.markIds != null and entity.markIds!='' ">
                and mark_ids=#{entity.markIds}
            </if>
            <if test="entity.posLat != null and entity.posLat!='' ">
                and pos_lat=#{entity.posLat}
            </if>
            <if test="entity.createDate != null">
                and create_date=#{entity.createDate}
            </if>
            <if test="entity.marks != null and entity.marks!='' ">
                and marks=#{entity.marks}
            </if>
            <if test="entity.politics != null and entity.politics!='' ">
                and politics=#{entity.politics}
            </if>
            <if test="entity.posLong != null and entity.posLong!='' ">
                and pos_long=#{entity.posLong}
            </if>
            <if test="entity.donFee != null and entity.donFee!='' ">
                and don_fee=#{entity.donFee}
            </if>
            <if test="entity.name!=null and entity.name!='' ">
                and (name like replace (#{entity.name},'*','%%')
                or name like concat('%', #{entity.name},'%')
                or pinyin = #{entity.name})
            </if>
            <if test="entity.remark != null and entity.remark!='' ">
                and remark=#{entity.remark}
            </if>
            <if test="entity.birthday != null">
                and date_format(birthday ,'%Y-%m-%d')= (select DATE_FORMAT(#{entity.birthday},'%Y-%m-%d'))
            </if>
            <if test="entity.egName != null and entity.egName!='' ">
                and eg_name=#{entity.egName}
            </if>
            <if test="entity.nation != null and entity.nation!='' ">
                and nation=#{entity.nation}
            </if>
            <if test="entity.sex != null and entity.sex!='' ">
                and sex=#{entity.sex}
            </if>
            <if test="entity.cardId != null and entity.cardId!='' ">
                and card_id=#{entity.cardId}
            </if>
            <if test="entity.flag != null and entity.flag!='' ">
                and flag= #{entity.FLAG_NORMAL}
            </if>
            <if test="entity.openid != null and entity.openid!='' ">
                and openid=#{entity.openid}
            </if>
            <if test="entity.status != null and entity.status!='' ">
                and status=#{entity.status}
            </if>
            <if test="entity.cardNum != null and entity.cardNum!='' ">
                and card_num=#{entity.cardNum}
            </if>
            <if test="entity.pinyin != null and entity.pinyin!='' ">
                and pinyin=#{entity.pinyin}
            </if>
            <if test="entity.truePhoto != null and entity.truePhoto!='' ">
                and true_photo=#{entity.truePhoto}
            </if>
            <if test="entity.cardStatus != null and entity.cardStatus!='' ">
                and card_status=#{entity.cardStatus}
            </if>
            <if test="entity.isShow != null and entity.isShow!='' ">
                and is_show=#{entity.isShow}
            </if>
            <if test="entity.point != null and entity.point!='' ">
                and point=#{entity.point}
            </if>
            <if test="entity.type != null and entity.type!='' ">
                and type=#{entity.type}
            </if>
            <if test="entity.cardType != null and entity.cardType!='' ">
                and card_type=#{entity.cardType}
            </if>
            <if test="entity.level != null and entity.level!='' ">
                and level=#{entity.level}
            </if>
            <if test="entity.posCity != null and entity.posCity!='' ">
                and pos_city=#{entity.posCity}
            </if>
            <if test="entity.userId != null and entity.userId!='' ">
                and user_id=#{entity.userId}
            </if>
        </if>
    </sql>
    <!-- 查询条件定义根据name查询 -->
    <sql id="query_whereName">
        <if test="entity!=null">

            <if test="entity.name!=null and entity.name!='' ">
                and (name like replace (#{entity.name},'*','%%')
                or name like concat('%', #{entity.name},'%')
                or pinyin = #{entity.name})
            </if>
            <if test="entity.flag != null and entity.flag!='' ">
                and flag= #{entity.FLAG_NORMAL}
            </if>
        </if>
    </sql>

    <!--根据生日查询 -->
    <sql id="query_where_byBirth">
        <if test="entity!=null">
            <if test="entity.id != null and entity.id!='' ">
                and id=#{entity.id}
            </if>
            <if test="entity.complete != null and entity.complete!='' ">
                and complete=#{entity.complete}
            </if>
            <if test="entity.markIds != null and entity.markIds!='' ">
                and mark_ids=#{entity.markIds}
            </if>
            <if test="entity.posLat != null and entity.posLat!='' ">
                and pos_lat=#{entity.posLat}
            </if>
            <if test="entity.politics != null and entity.politics!='' ">
                and politics=#{entity.politics}
            </if>
            <if test="entity.createDate != null">
                and create_date=#{entity.createDate}
            </if>
            <if test="entity.marks != null and entity.marks!='' ">
                and marks=#{entity.marks}
            </if>
            <if test="entity.posLong != null and entity.posLong!='' ">
                and pos_long=#{entity.posLong}
            </if>
            <if test="entity.donFee != null and entity.donFee!='' ">
                and don_fee=#{entity.donFee}
            </if>
            <if test="entity.name!=null and entity.name!='' ">
                and (name like replace (#{entity.name},'*','%%')
                or name like concat('%', #{entity.name},'%')
                or pinyin = #{entity.name})
            </if>
            <if test="entity.remark != null and entity.remark!='' ">
                and remark=#{entity.remark}
            </if>
            and date_format(birthday ,'%m-%d')= (select DATE_FORMAT(NOW(),'%m-%d'))
            <if test="entity.egName != null and entity.egName!='' ">
                and eg_name=#{entity.egName}
            </if>
            <if test="entity.nation != null and entity.nation!='' ">
                and nation=#{entity.nation}
            </if>
            <if test="entity.sex != null and entity.sex!='' ">
                and sex=#{entity.sex}
            </if>
            <if test="entity.cardId != null and entity.cardId!='' ">
                and card_id=#{entity.cardId}
            </if>
            <if test="entity.flag != null and entity.flag!='' ">
                and flag= #{entity.FLAG_NORMAL}
            </if>
            <if test="entity.openid != null and entity.openid!='' ">
                and openid=#{entity.openid}
            </if>
            <if test="entity.status != null and entity.status!='' ">
                and status=#{entity.status}
            </if>
            <if test="entity.cardNum != null and entity.cardNum!='' ">
                and card_num=#{entity.cardNum}
            </if>
            <if test="entity.pinyin != null and entity.pinyin!='' ">
                and pinyin=#{entity.pinyin}
            </if>
            <if test="entity.truePhoto != null and entity.truePhoto!='' ">
                and true_photo=#{entity.truePhoto}
            </if>
            <if test="entity.cardStatus != null and entity.cardStatus!='' ">
                and card_status=#{entity.cardStatus}
            </if>
            <if test="entity.isShow != null and entity.isShow!='' ">
                and is_show=#{entity.isShow}
            </if>
            <if test="entity.point != null and entity.point!='' ">
                and point=#{entity.point}
            </if>
            <if test="entity.type != null and entity.type!='' ">
                and type=#{entity.type}
            </if>
            <if test="entity.cardType != null and entity.cardType!='' ">
                and card_type=#{entity.cardType}
            </if>
            <if test="entity.level != null and entity.level!='' ">
                and level=#{entity.level}
            </if>
            <if test="entity.posCity != null and entity.posCity!='' ">
                and pos_city=#{entity.posCity}
            </if>
            <if test="entity.userId != null and entity.userId!='' ">
                and user_id=#{entity.userId}
            </if>
        </if>
    </sql>

    <!-- 查询条件定义 -->
    <sql id="query_where_more">
        <if test="entity!=null">
            <if test="entity.id != null and entity.id!='' ">
                and sm_s.id=#{entity.id}
            </if>
            <if test="entity.complete != null and entity.complete!='' ">
                and sm_s.complete=#{entity.complete}
            </if>
            <if test="entity.markIds != null and entity.markIds!='' ">
                and sm_s.mark_ids like concat('%', #{entity.markIds},'%')
            </if>
            <if test="entity.politics != null and entity.politics!='' ">
                and politics=#{entity.politics}
            </if>
            <if test="entity.posLat != null and entity.posLat!='' ">
                and sm_s.pos_lat=#{entity.posLat}
            </if>
            <if test="entity.createDate != null ">
                and sm_s.create_date=#{entity.createDate}
            </if>
            <if test="entity.marks != null and entity.marks!='' ">
                and sm_s.marks=#{entity.marks}
            </if>
            <if test="entity.posLong != null and entity.posLong!='' ">
                and sm_s.pos_long=#{entity.posLong}
            </if>
            <if test="entity.donFee != null and entity.donFee!='' ">
                and sm_s.don_fee=#{entity.donFee}
            </if>
            <if test="entity.name!=null and entity.name!='' ">
                and (sm_s.name like replace (#{entity.name},'*','%%')
                or sm_s.name like concat('%', #{entity.name},'%')
                or sm_s.pinyin = #{entity.name})
            </if>
            <if test="entity.remark != null and entity.remark!='' ">
                and sm_s.remark=#{entity.remark}
            </if>
            <if test="entity.birthday != null">
                and
                date_format(birthday ,'%Y-%m-%d')= (select DATE_FORMAT(#{entity.birthday},'%Y-%m-%d'))
            </if>
            <if test="entity.egName != null and entity.egName!='' ">
                and sm_s.eg_name=#{entity.egName}
            </if>
            <if test="entity.nation != null and entity.nation!='' ">
                and sm_s.nation=#{entity.nation}
            </if>
            <if test="entity.sex != null and entity.sex!='' ">
                and sm_s.sex=#{entity.sex}
            </if>
            <if test="entity.cardId != null and entity.cardId!='' ">
                and sm_s.card_id=#{entity.cardId}
            </if>
            <if test="entity.flag != null and entity.flag!='' ">
                and sm_s.flag= #{entity.FLAG_NORMAL}
            </if>
            <if test="entity.openid != null and entity.openid!='' ">
                and sm_s.openid=#{entity.openid}
            </if>
            <if test="entity.status != null and entity.status!='' ">
                and sm_s.status=#{entity.status}
            </if>
            <if test="entity.cardNum != null and entity.cardNum!='' ">
                and sm_s.card_num=#{entity.cardNum}
            </if>
            <if test="entity.pinyin != null and entity.pinyin!='' ">
                and sm_s.pinyin=#{entity.pinyin}
            </if>
            <if test="entity.truePhoto != null and entity.truePhoto!='' ">
                and sm_s.true_photo=#{entity.truePhoto}
            </if>
            <if test="entity.cardStatus != null and entity.cardStatus!='' ">
                and sm_s.card_status=#{entity.cardStatus}
            </if>
            <if test="entity.isShow != null and entity.isShow!='' ">
                and sm_s.is_show=#{entity.isShow}
            </if>
            <if test="entity.point != null and entity.point!='' ">
                and sm_s.point=#{entity.point}
            </if>
            <if test="entity.type != null and entity.type!='' ">
                and sm_s.type=#{entity.type}
            </if>
            <if test="entity.cardType != null and entity.cardType!='' ">
                and sm_s.card_type=#{entity.cardType}
            </if>
            <if test="entity.level != null and entity.level!='' ">
                and sm_s.level=#{entity.level}
            </if>
            <if test="entity.posCity != null and entity.posCity!='' ">
                and sm_s.pos_city=#{entity.posCity}
            </if>
            <if test="entity.userId != null and entity.userId!='' ">
                and sm_s.user_id=#{entity.userId}
            </if>
            <if test="entity.orgId!=null and entity.orgId!='' ">
                <!-- 	           and sua.as_id   in (SELECT as_a.id FROM as_association as_a WHERE find_in_set(#{entity.orgId}, as_a.parent_ids) or as_a.id = #{entity.orgId})
                               and     sua.as_id = #{entity.orgId}
                 -->
                and sm_s.user_id in (SELECT sua.user_id FROM sys_user_asso sua WHERE sua.as_id = #{entity.orgId} )
            </if>
        </if>
    </sql>


    <!-- 根据id查询 -->
    <select id="get" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_schoolmate sm_s
        where id = #{id,jdbcType=VARCHAR} and flag = #{FLAG_NORMAL}
    </select>

    <!-- 根据suerId查询 -->
    <select id="getByUserId" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" resultMap="PageResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_schoolmate sm_s
        where user_id = #{userId,jdbcType=VARCHAR} and flag = #{FLAG_NORMAL}
    </select>

    <!--根据校友id获取校友的籍贯及默认的用户名 -->
    <select id="getSmInfoById" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" resultMap="BaseResultMap">
        select
        <include refid="Info_Base_Column_List"/>
        from sm_schoolmate sm_s
        left join sys_user sys_u on sm_s.user_id = sys_u.id
        where sm_s.id = #{id,jdbcType=VARCHAR} and
        sm_s.flag = #{FLAG_NORMAL}
        and sys_u.flag = #{FLAG_NORMAL}
    </select>
    <!--根据校友name -->
    <select id="listByName" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" resultMap="PageResultMap">
        select
        distinct
        sm_s.id,sm_s.create_date,sm_s.marks,sm_s.name,sm_s.sex,sm_s.user_id,sm_s.birthday
        from sm_schoolmate sm_s
        left join sys_user_asso sua on sm_s.id = sua.user_id
        and sua.as_id in (
        select
        as_id
        from sys_user_asso
        where user_id = #{entity.paramA}
        )
        <where>
            <include refid="query_where"></include>
        </where>
    </select>
    <select id="listOnlyByName" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_schoolmate sm_s
        <where>
            <include refid="query_whereName"></include>
        </where>
        order by sm_s.create_date DESC
    </select>
    <!--自定义分页  -->
    <select id="loadByPage_COUNT" resultType="java.lang.Long">
        select
        count(DISTINCT sm_s.id)
        from sm_schoolmate sm_s
        <where>
            <include refid="query_where_more"></include>
            <if test="entity.smContact != null">
                <if test="entity.smContact.contact != null or entity.smContact.type != null">
                    and sm_s.user_id in (SELECT sm_c.user_id FROM sm_contact sm_c WHERE sm_c.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smContact.type != null and entity.type!='' ">
                        and sm_c.type=#{entity.smContact.type}
                    </if>
                    <if test="entity.smContact.contact != null and entity.smContact.contact !='' ">
                        and sm_c.contact=#{entity.smContact.contact}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smProfession != null">
                <if test="entity.smProfession.country != null or entity.smProfession.district != null or
		    	entity.smProfession.nature != null or entity.smProfession.province != null or
		    	entity.smProfession.status != null or entity.smProfession.workplace != null or
			    entity.smProfession.startYearInternalFirst != null or entity.smProfession.startYearInternalSencond != null or
			    entity.smProfession.endYearInternalFirst != null or entity.smProfession.endYearInternalSencond != null
			    or entity.smProfession.position != null  or entity.smProfession.industry != null
			    or entity.smProfession.city != null
		    	">
                    and sm_s.user_id in (SELECT sm_p.user_id FROM sm_profession sm_p WHERE sm_p.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smProfession.country != null and entity.smProfession.country!='' ">
                        and sm_p.country=#{entity.smProfession.country}
                    </if>
                    <if test="entity.smProfession.district != null and entity.smProfession.district!='' ">
                        and sm_p.district=#{entity.smProfession.district}
                    </if>
                    <if test="entity.smProfession.city != null and entity.smProfession.city !='' ">
                        and sm_p.city=#{entity.smProfession.city}
                    </if>
                    <if test="entity.smProfession.province != null and entity.smProfession.province!='' ">
                        and sm_p.province=#{entity.smProfession.province}
                    </if>
                    <if test="entity.smProfession.workplace != null and entity.smProfession.workplace!='' ">
                        and sm_p.workplace like concat('%', #{entity.smProfession.workplace},'%')
                    </if>
                    <if test="entity.smProfession.nature != null and entity.smProfession.nature!='' ">
                        and sm_p.nature=#{entity.smProfession.nature}
                    </if>
                    <if test="entity.smProfession.industry != null and entity.smProfession.industry!='' ">
                        and sm_p.industry=#{entity.smProfession.industry}
                    </if>
                    <if test="entity.smProfession.position != null and entity.smProfession.position !='' ">
                        and sm_p.position=#{entity.smProfession.position}
                    </if>
                    <if test="entity.smProfession.status != null and entity.smProfession.status!='' ">
                        and sm_p.status=#{entity.smProfession.status}
                    </if>
                    <if test="entity.smProfession.startYearInternalFirst != null and   entity.smProfession.startYearInternalSencond != null">
                        and date_format(sm_p.start_date ,'%Y') between #{entity.smProfession.startYearInternalFirst} and
                        #{entity.smProfession.startYearInternalSencond}
                    </if>
                    <if test="entity.smProfession.endYearInternalFirst != null and entity.smProfession.endYearInternalSencond != null">
                        and date_format(sm_p.end_date ,'%Y') between #{entity.smProfession.endYearInternalFirst} and
                        #{entity.smProfession.endYearInternalSencond}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smSocial != null">
                <if test="entity.smSocial.name != null or entity.smSocial.position != null or
		    	entity.smSocial.status != null">
                    and sm_s.user_id in (SELECT sm_soci.user_id FROM sm_social sm_soci WHERE sm_soci.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smSocial.name!=null and entity.smSocial.name!='' ">
                        and sm_soci.name   like concat('%', #{entity.smSocial.name},'%')
                    </if>
                    <if test="entity.smSocial.position != null and entity.smSocial.position!='' ">
                        and sm_soci.position=#{entity.smSocial.position}
                    </if>
                    <if test="entity.smSocial.status != null and entity.smSocial.status!='' ">
                        and sm_soci.status=#{entity.smSocial.status}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smAddress != null">
                <if test="entity.smAddress.country != null or entity.smAddress.district != null or
		   		entity.smAddress.province != null or entity.smAddress.city != null or entity.smAddress.detail != null
		   		or entity.smAddress.type != null
		   		">
                    and sm_s.user_id in (SELECT sm_add.user_id FROM sm_address sm_add WHERE sm_add.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smAddress.country != null and entity.smAddress.country!='' ">
                        and sm_add.country=#{entity.smAddress.country}
                    </if>
                    <if test="entity.smAddress.province != null and entity.smAddress.province!='' ">
                        and sm_add.province=#{entity.smAddress.province}
                    </if>
                    <if test="entity.smAddress.district != null and entity.smAddress.district !='' ">
                        and sm_add.district=#{entity.smAddress.district}
                    </if>
                    <if test="entity.smAddress.city != null and entity.smAddress.city!='' ">
                        and sm_add.city=#{entity.smAddress.city}
                    </if>
                    <if test="entity.smAddress.detail != null and entity.smAddress.detail!='' ">
                        and sm_add.detail like concat('%', #{entity.smAddress.detail},'%')
                    </if>
                    <if test="entity.smAddress.type != null and entity.smAddress.type !='' ">
                        and sm_add.type = #{entity.smAddress.type}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smHonor != null">
                <if test=" entity.smHonor.name != null  or entity.smHonor.startDate != null  or entity.smHonor.endDate != null ">
                    and sm_s.user_id in (SELECT sm_hon.user_id FROM sm_honor sm_hon WHERE sm_hon.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smHonor.name!=null and entity.smHonor.name!='' ">
                        and sm_hon.name like concat('%', #{entity.smHonor.name},'%')
                    </if>
                    <if test="entity.smHonor.startDate != null  and entity.smHonor.endDate != null ">
                        and date_format(sm_hon.date ,'%Y') between #{entity.smHonor.startDate} and
                        #{entity.smHonor.endDate}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smEducation != null">
                <if test="entity.smEducation.school != null or entity.smEducation.college != null or
		   			entity.smEducation.series != null or entity.smEducation.specialty != null or
					entity.smEducation.eduRecord != null or entity.smEducation.degree != null or
					entity.smEducation.schoollen != null or
					entity.smEducation.classes != null or entity.smEducation.studentNo != null or
					entity.smEducation.startYearInternalFirst != null or
					entity.smEducation.endYearInternalFirst != null
		   			">
                    and sm_s.user_id in (SELECT sm_edu.user_id FROM sm_education sm_edu WHERE sm_edu.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smEducation.school != null and entity.smEducation.school!='' ">
                        and sm_edu.school=#{entity.smEducation.school}
                    </if>
                    <if test="entity.smEducation.college != null and entity.smEducation.college!='' ">
                        and sm_edu.college=#{entity.smEducation.college}
                    </if>
                    <if test="entity.smEducation.series != null and entity.smEducation.series!='' ">
                        and sm_edu.series=#{entity.smEducation.series}
                    </if>
                    <if test="entity.smEducation.specialty != null and entity.smEducation.specialty!='' ">
                        and sm_edu.specialty=#{entity.smEducation.specialty}
                    </if>

                    <if test="entity.smEducation.eduRecord != null and entity.smEducation.eduRecord!='' ">
                        and sm_edu.edu_record=#{entity.smEducation.eduRecord}
                    </if>
                    <if test="entity.smEducation.degree != null and entity.smEducation.degree!='' ">
                        and sm_edu.degree=#{entity.smEducation.degree}
                    </if>
                    <if test="entity.smEducation.schoollen != null and entity.smEducation.schoollen!='' ">
                        and sm_edu.schoollen=#{entity.smEducation.schoollen}
                    </if>
                    <if test="entity.smEducation.classes != null and entity.smEducation.classes !='' ">
                        and sm_edu.classes=#{entity.smEducation.classes}
                    </if>
                    <if test="entity.smEducation.studentNo != null and entity.smEducation.studentNo !='' ">
                        and sm_edu.student_no=#{entity.smEducation.studentNo}
                    </if>
                    <if test="entity.smEducation.startYearInternalFirst != null and entity.smEducation.startYearInternalSencond != null  and entity.smEducation.startYearInternalFirst!=''  and  entity.smEducation.startYearInternalSencond != '' ">
                        and date_format(sm_edu.startdate ,'%Y') between #{entity.smEducation.startYearInternalFirst} and
                        #{entity.smEducation.startYearInternalSencond}
                    </if>
                    <if test="entity.smEducation.endYearInternalFirst != null and entity.smEducation.endYearInternalFirst!=''  and entity.smEducation.endYearInternalSencond != null and entity.smEducation.endYearInternalSencond!='' ">
                        and date_format(sm_edu.enddate ,'%Y') between #{entity.smEducation.endYearInternalFirst} and
                        #{entity.smEducation.endYearInternalSencond}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smHistorydata != null">
                <if test="entity.smHistorydata.otherSchool != null or entity.smHistorydata.otherSpecialty!= null or
					entity.smHistorydata.trustUnit!= null or entity.smHistorydata.personLove!= null or
					entity.smHistorydata.otherSchool!= null or entity.smHistorydata.otherDegree!= null or
					entity.smHistorydata.nativeAdress!= null or entity.smHistorydata.beforeSchoolunit != null ">
                    and sm_s.user_id in (SELECT sm_his_da.user_id FROM sm_history_data sm_his_da WHERE sm_his_da.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smHistorydata.otherSchool != null and entity.smHistorydata.otherSchool!='' ">
                        and sm_his_da.other_school like concat('%', #{entity.smHistorydata.otherSchool},'%')
                    </if>
                    <if test="entity.smHistorydata.otherSpecialty != null and entity.smHistorydata.otherSpecialty!='' ">
                        and sm_his_da.other_specialty like concat('%', #{entity.smHistorydata.otherSpecialty},'%')
                    </if>
                    <if test="entity.smHistorydata.trustUnit != null and entity.smHistorydata.trustUnit!='' ">
                        and sm_his_da.trust_unit like concat('%', #{entity.smHistorydata.trustUnit},'%')
                    </if>
                    <if test="entity.smHistorydata.personLove != null and entity.smHistorydata.personLove!='' ">
                        and sm_his_da.person_love like concat('%', #{entity.smHistorydata.personLove},'%')
                    </if>
                    <if test="entity.smHistorydata.otherDegree != null and entity.smHistorydata.otherDegree!='' ">
                        and sm_his_da.other_degree like concat('%', #{entity.smHistorydata.otherDegree},'%')
                    </if>
                    <if test="entity.smHistorydata.nativeAdress != null and entity.smHistorydata.nativeAdress!='' ">
                        and sm_his_da.native_adress like concat('%', #{entity.smHistorydata.nativeAdress},'%')
                    </if>
                    <if test="entity.smHistorydata.beforeSchoolunit != null and entity.smHistorydata.beforeSchoolunit !='' ">
                        and sm_his_da.before_school_unit like concat('%', #{entity.smHistorydata.beforeSchoolunit},'%')
                    </if>
                    )
                </if>
            </if>
        </where>
        order by sm_s.create_date DESC
    </select>

    <select id="loadByPageAll_COUNT" resultType="java.lang.Long">
        select
        count(DISTINCT sm_s.id)
        from sm_schoolmate sm_s
        <where>
            sm_s.flag ="NORMAL"
            <if test="type != null and type!='' ">
                and sm_s.type=#{type}
            </if>
            <if test="selectStr != null and selectStr != ''">
                and (
                MATCH(sm_s.NAME,sm_s.eg_name) AGAINST(concat(#{selectStr},'*') IN BOOLEAN MODE)
                or sm_s.birthday like concat('%', #{selectStr},'%')
                OR sm_s.user_id IN(
                SELECT
                sm_e.user_id
                FROM
                sm_education sm_e
                WHERE
                sm_e.flag = "NORMAL"
                AND sm_e.startdate like concat('%', #{selectStr},'%')
                OR sm_e.enddate like concat('%', #{selectStr},'%')
                OR sm_e.college IN (
                SELECT
                id
                FROM
                setting_department
                WHERE
                type = 'COLLEGE'
                AND MATCH (NAME) AGAINST (concat(#{selectStr},'*') IN BOOLEAN MODE)
                )
                OR sm_e.series IN (
                SELECT
                id
                FROM
                setting_department
                WHERE
                type = 'DEPARTMENT'
                AND MATCH (NAME) AGAINST (concat(#{selectStr},'*') IN BOOLEAN MODE)
                )
                OR sm_e.specialty IN (
                SELECT
                id
                FROM
                setting_department
                WHERE
                type = 'MAJOR'
                AND MATCH (NAME) AGAINST (concat(#{selectStr},'*') IN BOOLEAN MODE)
                )
                )
                OR sm_s.user_id IN (
                SELECT
                sm_p.user_id
                FROM
                sm_profession sm_p
                WHERE
                sm_p.flag = "NORMAL"
                AND MATCH (sm_p.workplace) AGAINST (concat(#{selectStr},'*') IN BOOLEAN MODE)
                )
                OR sm_s.user_id IN (
                SELECT
                sm_c.user_id
                FROM
                sm_contact sm_c
                WHERE
                sm_c.flag = "NORMAL"
                AND MATCH (sm_c.contact) AGAINST (concat(#{selectStr},'*') IN BOOLEAN MODE)
                )
                )
            </if>
        </where>
    </select>
    <!-- 分页查询（全字段模糊查询）  parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" -->
    <select id="loadByPageAll" resultMap="PageResultMap">
        select
        distinct
        sm_s.id,sm_s.create_date,sm_s.marks,sm_s.name,sm_s.sex,sm_s.user_id,sm_s.birthday from sm_schoolmate sm_s
        <where>
            <!--<if test="entity!=null">-->
            sm_s.flag ="NORMAL"
            <if test="type != null and type!='' ">
                and sm_s.type=#{type}
            </if>
            <if test="selectStr != null and selectStr != ''">
                and (
                MATCH(sm_s.NAME,sm_s.eg_name) AGAINST(concat(#{selectStr},'*') IN BOOLEAN MODE)
                or sm_s.birthday like concat('%', #{selectStr},'%')
                OR sm_s.user_id IN(
                SELECT
                sm_e.user_id
                FROM
                sm_education sm_e
                WHERE
                sm_e.flag = "NORMAL"
                AND sm_e.startdate like concat('%', #{selectStr},'%')
                OR sm_e.enddate like concat('%', #{selectStr},'%')
                OR sm_e.college IN (
                SELECT
                id
                FROM
                setting_department
                WHERE
                type = 'COLLEGE'
                AND MATCH (NAME) AGAINST (concat(#{selectStr},'*') IN BOOLEAN MODE)
                )
                OR sm_e.series IN (
                SELECT
                id
                FROM
                setting_department
                WHERE
                type = 'DEPARTMENT'
                AND MATCH (NAME) AGAINST (concat(#{selectStr},'*') IN BOOLEAN MODE)
                )
                OR sm_e.specialty IN (
                SELECT
                id
                FROM
                setting_department
                WHERE
                type = 'MAJOR'
                AND MATCH (NAME) AGAINST (concat(#{selectStr},'*') IN BOOLEAN MODE)
                )
                )
                OR sm_s.user_id IN (
                SELECT
                sm_p.user_id
                FROM
                sm_profession sm_p
                WHERE
                sm_p.flag = "NORMAL"
                AND MATCH (sm_p.workplace) AGAINST (concat(#{selectStr},'*') IN BOOLEAN MODE)
                )
                OR sm_s.user_id IN (
                SELECT
                sm_c.user_id
                FROM
                sm_contact sm_c
                WHERE
                sm_c.flag = "NORMAL"
                AND MATCH (sm_c.contact) AGAINST (concat(#{selectStr},'*') IN BOOLEAN MODE)
                )
                )
            </if>
        </where>
        order by sm_s.create_date DESC
    </select>

    <!-- 分页查询(帶高級檢索) -->
    <select id="loadByPage" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" resultMap="PageResultMap">
        select
        distinct
        sm_s.id,sm_s.create_date,sm_s.marks,sm_s.name,sm_s.sex,sm_s.user_id,sm_s.birthday
        from sm_schoolmate sm_s
        <where>
            <include refid="query_where_more"></include>
            <if test="entity.smContact != null">
                <if test="entity.smContact.contact != null or entity.smContact.type != null">
                    and sm_s.user_id in (SELECT sm_c.user_id FROM sm_contact sm_c WHERE sm_c.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smContact.type != null and entity.type!='' ">
                        and sm_c.type=#{entity.smContact.type}
                    </if>
                    <if test="entity.smContact.contact != null and entity.smContact.contact !='' ">
                        and sm_c.contact=#{entity.smContact.contact}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smProfession != null">
                <if test="entity.smProfession.country != null or entity.smProfession.district != null or
		    	entity.smProfession.nature != null or entity.smProfession.province != null or
		    	entity.smProfession.status != null or entity.smProfession.workplace != null or
			    entity.smProfession.startYearInternalFirst != null or entity.smProfession.startYearInternalSencond != null or
			    entity.smProfession.endYearInternalFirst != null or entity.smProfession.endYearInternalSencond != null
			    or entity.smProfession.position != null  or entity.smProfession.industry != null
   			    or entity.smProfession.city != null
		    	">
                    and sm_s.user_id in (SELECT sm_p.user_id FROM sm_profession sm_p WHERE sm_p.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smProfession.country != null and entity.smProfession.country!='' ">
                        and sm_p.country=#{entity.smProfession.country}
                    </if>
                    <if test="entity.smProfession.city != null and entity.smProfession.city !='' ">
                        and sm_p.city=#{entity.smProfession.city}
                    </if>
                    <if test="entity.smProfession.district != null and entity.smProfession.district!='' ">
                        and sm_p.district=#{entity.smProfession.district}
                    </if>
                    <if test="entity.smProfession.province != null and entity.smProfession.province!='' ">
                        and sm_p.province=#{entity.smProfession.province}
                    </if>
                    <if test="entity.smProfession.workplace != null and entity.smProfession.workplace!='' ">
                        and sm_p.workplace like concat('%', #{entity.smProfession.workplace},'%')
                    </if>
                    <if test="entity.smProfession.nature != null and entity.smProfession.nature!='' ">
                        and sm_p.nature=#{entity.smProfession.nature}
                    </if>
                    <if test="entity.smProfession.industry != null and entity.smProfession.industry!='' ">
                        and sm_p.industry=#{entity.smProfession.industry}
                    </if>
                    <if test="entity.smProfession.position != null and entity.smProfession.position !='' ">
                        and sm_p.position=#{entity.smProfession.position}
                    </if>
                    <if test="entity.smProfession.status != null and entity.smProfession.status!='' ">
                        and sm_p.status=#{entity.smProfession.status}
                    </if>
                    <if test="entity.smProfession.startYearInternalFirst != null and   entity.smProfession.startYearInternalSencond != null">
                        and date_format(sm_p.start_date ,'%Y') between #{entity.smProfession.startYearInternalFirst} and
                        #{entity.smProfession.startYearInternalSencond}
                    </if>
                    <if test="entity.smProfession.endYearInternalFirst != null and entity.smProfession.endYearInternalSencond != null">
                        and date_format(sm_p.end_date ,'%Y') between #{entity.smProfession.endYearInternalFirst} and
                        #{entity.smProfession.endYearInternalSencond}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smSocial != null">
                <if test="entity.smSocial.name != null or entity.smSocial.position != null or
		    	entity.smSocial.status != null">
                    and sm_s.user_id in (SELECT sm_soci.user_id FROM sm_social sm_soci WHERE sm_soci.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smSocial.name!=null and entity.smSocial.name!='' ">
                        and sm_soci.name   like concat('%', #{entity.smSocial.name},'%')
                    </if>
                    <if test="entity.smSocial.position != null and entity.smSocial.position!='' ">
                        and sm_soci.position=#{entity.smSocial.position}
                    </if>
                    <if test="entity.smSocial.status != null and entity.smSocial.status!='' ">
                        and sm_soci.status=#{entity.smSocial.status}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smAddress != null">
                <if test="entity.smAddress.country != null or entity.smAddress.district != null or
		   		entity.smAddress.province != null or entity.smAddress.city != null or entity.smAddress.detail != null
		   		or entity.smAddress.type != null
		   		">
                    and sm_s.user_id in (SELECT sm_add.user_id FROM sm_address sm_add WHERE sm_add.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smAddress.country != null and entity.smAddress.country!='' ">
                        and sm_add.country=#{entity.smAddress.country}
                    </if>
                    <if test="entity.smAddress.province != null and entity.smAddress.province!='' ">
                        and sm_add.province=#{entity.smAddress.province}
                    </if>
                    <if test="entity.smAddress.district != null and entity.smAddress.district !='' ">
                        and sm_add.district=#{entity.smAddress.district}
                    </if>
                    <if test="entity.smAddress.city != null and entity.smAddress.city!='' ">
                        and sm_add.city=#{entity.smAddress.city}
                    </if>
                    <if test="entity.smAddress.detail != null and entity.smAddress.detail!='' ">
                        and sm_add.detail like concat('%', #{entity.smAddress.detail},'%')
                    </if>
                    <if test="entity.smAddress.type != null and entity.smAddress.type !='' ">
                        and sm_add.type = #{entity.smAddress.type}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smHonor != null">
                <if test=" entity.smHonor.name != null  or entity.smHonor.startDate != null  or entity.smHonor.endDate != null ">
                    and sm_s.user_id in (SELECT sm_hon.user_id FROM sm_honor sm_hon WHERE sm_hon.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smHonor.name!=null and entity.smHonor.name!='' ">
                        and sm_hon.name like concat('%', #{entity.smHonor.name},'%')
                    </if>
                    <if test="entity.smHonor.startDate != null  and entity.smHonor.endDate != null ">
                        and date_format(sm_hon.date ,'%Y') between #{entity.smHonor.startDate} and
                        #{entity.smHonor.endDate}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smEducation != null">
                <if test="entity.smEducation.school != null or entity.smEducation.college != null or
		   			entity.smEducation.series != null or entity.smEducation.specialty != null or
					entity.smEducation.eduRecord != null or entity.smEducation.degree != null or
					entity.smEducation.schoollen != null or
					entity.smEducation.classes != null or entity.smEducation.studentNo != null or
					entity.smEducation.startYearInternalFirst != null or
					entity.smEducation.endYearInternalFirst != null
		   			">
                    and sm_s.user_id in (SELECT sm_edu.user_id FROM sm_education sm_edu WHERE sm_edu.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smEducation.school != null and entity.smEducation.school!='' ">
                        and sm_edu.school=#{entity.smEducation.school}
                    </if>
                    <if test="entity.smEducation.college != null and entity.smEducation.college!='' ">
                        and sm_edu.college=#{entity.smEducation.college}
                    </if>
                    <if test="entity.smEducation.series != null and entity.smEducation.series!='' ">
                        and sm_edu.series=#{entity.smEducation.series}
                    </if>
                    <if test="entity.smEducation.specialty != null and entity.smEducation.specialty!='' ">
                        and sm_edu.specialty=#{entity.smEducation.specialty}
                    </if>

                    <if test="entity.smEducation.eduRecord != null and entity.smEducation.eduRecord!='' ">
                        and sm_edu.edu_record=#{entity.smEducation.eduRecord}
                    </if>
                    <if test="entity.smEducation.degree != null and entity.smEducation.degree!='' ">
                        and sm_edu.degree=#{entity.smEducation.degree}
                    </if>
                    <if test="entity.smEducation.schoollen != null and entity.smEducation.schoollen!='' ">
                        and sm_edu.schoollen=#{entity.smEducation.schoollen}
                    </if>
                    <if test="entity.smEducation.classes != null and entity.smEducation.classes !='' ">
                        and sm_edu.classes=#{entity.smEducation.classes}
                    </if>
                    <if test="entity.smEducation.studentNo != null and entity.smEducation.studentNo !='' ">
                        and sm_edu.student_no=#{entity.smEducation.studentNo}
                    </if>
                    <if test="entity.smEducation.startYearInternalFirst != null and entity.smEducation.startYearInternalSencond != null  and entity.smEducation.startYearInternalFirst!=''  and  entity.smEducation.startYearInternalSencond != '' ">
                        and date_format(sm_edu.startdate ,'%Y') between #{entity.smEducation.startYearInternalFirst} and
                        #{entity.smEducation.startYearInternalSencond}
                    </if>
                    <if test="entity.smEducation.endYearInternalFirst != null and entity.smEducation.endYearInternalFirst!=''  and entity.smEducation.endYearInternalSencond != null and entity.smEducation.endYearInternalSencond!='' ">
                        and date_format(sm_edu.enddate ,'%Y') between #{entity.smEducation.endYearInternalFirst} and
                        #{entity.smEducation.endYearInternalSencond}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smHistorydata != null">
                <if test="entity.smHistorydata.otherSchool != null or entity.smHistorydata.otherSpecialty!= null or
					entity.smHistorydata.trustUnit!= null or entity.smHistorydata.personLove!= null or
					entity.smHistorydata.otherSchool!= null or entity.smHistorydata.otherDegree!= null or
					entity.smHistorydata.nativeAdress!= null or entity.smHistorydata.beforeSchoolunit != null ">
                    and sm_s.user_id in (SELECT sm_his_da.user_id FROM sm_history_data sm_his_da WHERE sm_his_da.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smHistorydata.otherSchool != null and entity.smHistorydata.otherSchool!='' ">
                        and sm_his_da.other_school like concat('%', #{entity.smHistorydata.otherSchool},'%')
                    </if>
                    <if test="entity.smHistorydata.otherSpecialty != null and entity.smHistorydata.otherSpecialty!='' ">
                        and sm_his_da.other_specialty like concat('%', #{entity.smHistorydata.otherSpecialty},'%')
                    </if>
                    <if test="entity.smHistorydata.trustUnit != null and entity.smHistorydata.trustUnit!='' ">
                        and sm_his_da.trust_unit like concat('%', #{entity.smHistorydata.trustUnit},'%')
                    </if>
                    <if test="entity.smHistorydata.personLove != null and entity.smHistorydata.personLove!='' ">
                        and sm_his_da.person_love like concat('%', #{entity.smHistorydata.personLove},'%')
                    </if>
                    <if test="entity.smHistorydata.otherDegree != null and entity.smHistorydata.otherDegree!='' ">
                        and sm_his_da.other_degree like concat('%', #{entity.smHistorydata.otherDegree},'%')
                    </if>
                    <if test="entity.smHistorydata.nativeAdress != null and entity.smHistorydata.nativeAdress!='' ">
                        and sm_his_da.native_adress like concat('%', #{entity.smHistorydata.nativeAdress},'%')
                    </if>
                    <if test="entity.smHistorydata.beforeSchoolunit != null and entity.smHistorydata.beforeSchoolunit !='' ">
                        and sm_his_da.before_school_unit like concat('%', #{entity.smHistorydata.beforeSchoolunit},'%')
                    </if>
                    )
                </if>
            </if>
        </where>
        order by sm_s.create_date DESC
    </select>

    <!-- 不带分页查询(帶高級檢索) -->
    <select id="loadListBy" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" resultMap="BaseResultMap">
        select
        distinct
        <include refid="Base_Column_List"/>
        from sm_schoolmate sm_s
        LEFT JOIN sys_user_asso sua ON sua.user_id = sm_s.user_id
        <if test="entity.smContact != null">
            left join sm_contact sm_c on sm_s.user_id = sm_c.user_id and sm_c.flag = #{entity.FLAG_NORMAL}
        </if>
        <if test="entity.smProfession != null">
            left join sm_profession sm_p on sm_s.user_id = sm_p.user_id and sm_p.flag = #{entity.FLAG_NORMAL}
        </if>
        <if test="entity.smSocial != null">
            left join sm_social sm_soci on sm_s.user_id = sm_soci.user_id and sm_soci.flag = #{entity.FLAG_NORMAL}
        </if>
        <if test="entity.smPolitic != null">
            left join sm_politics sm_poli on sm_s.user_id = sm_poli.user_id and sm_poli.flag = #{entity.FLAG_NORMAL}
        </if>
        <if test="entity.smAddress != null">
            left join sm_address sm_add on sm_s.user_id = sm_add.user_id and sm_add.flag = #{entity.FLAG_NORMAL}
        </if>
        <if test="entity.smExperience != null">
            left join sm_experience sm_exper on sm_s.user_id = sm_exper.user_id and sm_exper.flag =
            #{entity.FLAG_NORMAL}
        </if>
        <if test="entity.smHonor != null">
            left join sm_honor sm_hon on sm_s.user_id = sm_hon.user_id and sm_hon.flag = #{entity.FLAG_NORMAL}
        </if>
        <if test="entity.smEducation != null">
            left join sm_education sm_edu on sm_s.user_id = sm_edu.user_id and sm_edu.flag = #{entity.FLAG_NORMAL}
        </if>
        <if test="entity.smHistorydata != null">
            left join sm_history_data sm_his_da on sm_s.user_id = sm_his_da.user_id and sm_his_da.flag =
            #{entity.FLAG_NORMAL}
        </if>
        <where>
            <include refid="query_where_more"></include>
            <if test="entity.smContact != null">
                <if test="entity.smContact.type != null and entity.type!='' ">
                    and sm_c.type=#{entity.smContact.type}
                </if>
                <if test="entity.smContact.contact != null and entity.smContact.contact !='' ">
                    and sm_c.contact=#{entity.smContact.contact}
                </if>
            </if>
            <if test="entity.smProfession != null">
                <if test="entity.smProfession.country != null and entity.smProfession.country!='' ">
                    and sm_p.country=#{entity.smProfession.country}
                </if>
                <if test="entity.smProfession.district != null and entity.smProfession.district!='' ">
                    and sm_p.district=#{entity.smProfession.district}
                </if>
                <if test="entity.smProfession.province != null and entity.smProfession.province!='' ">
                    and sm_p.province=#{entity.smProfession.province}
                </if>
                <if test="entity.smProfession.workplace != null and entity.smProfession.workplace!='' ">
                    and sm_p.workplace=#{entity.smProfession.workplace}
                </if>
                <if test="entity.smProfession.nature != null and entity.smProfession.nature!='' ">
                    and sm_p.nature=#{entity.smProfession.nature}
                </if>
                <if test="entity.smProfession.industry != null and entity.smProfession.industry!='' ">
                    and sm_p.industry=#{entity.smProfession.industry}
                </if>
                <if test="entity.status != null and entity.status!='' ">
                    and status=#{entity.status}
                </if>
            </if>
            <if test="entity.smSocial != null">
                <if test="entity.smSocial.name!=null and entity.smSocial.name!='' ">
                    and sm_soci.name = #{entity.smSocial.name}
                </if>
                <if test="entity.smSocial.position != null and entity.smSocial.position!='' ">
                    and sm_soci.position=#{entity.smSocial.position}
                </if>
                <if test="entity.smSocial.status != null and entity.smSocial.status!='' ">
                    and sm_soci.status=#{entity.smSocial.status}
                </if>
            </if>
            <if test="entity.smPolitic != null">
                <if test="entity.smPolitic.name!=null and entity.smPolitic.name!='' ">
                    and sm_poli.name = #{entity.smPolitic.name}
                </if>
                <if test="entity.smPolitic.position != null and entity.smPolitic.position!='' ">
                    and sm_poli.position=#{entity.smPolitic.position}
                </if>
                <if test="entity.smPolitic.type != null and entity.smPolitic.type!='' ">
                    and sm_poli.type=#{entity.smPolitic.type}
                </if>
            </if>
            <if test="entity.smAddress != null">
                <if test="entity.smAddress.country != null and entity.smAddress.country!='' ">
                    and sm_add.country=#{entity.smAddress.country}
                </if>
                <if test="entity.smAddress.province != null and entity.smAddress.province!='' ">
                    and sm_add.province=#{entity.smAddress.province}
                </if>
                <if test="entity.smAddress.city != null and entity.smAddress.city!='' ">
                    and sm_add.city=#{entity.smAddress.city}
                </if>
            </if>
            <if test="entity.smExperience != null">
                <if test="entity.smExperience.name!=null and entity.smExperience.name!='' ">
                    and sm_exper.name = #{entity.smExperience.name}
                </if>
                <if test="entity.smExperience.position != null and entity.smExperience.position!='' ">
                    and sm_exper.position=#{entity.smExperience.position}
                </if>
            </if>
            <if test="entity.smHonor != null">
                <if test="entity.smHonor.name!=null and entity.smHonor.name!='' ">
                    and sm_hon.name = #{entity.smHonor.name}
                </if>
                <if test="entity.smHonor.type != null and entity.smHonor.type!='' ">
                    and sm_hon.type=#{entity.smHonor.type}
                </if>
                <if test="entity.smHonor.industry != null and entity.smHonor.industry!='' ">
                    and sm_hon.industry=#{entity.smHonor.industry}
                </if>
            </if>
            <if test="entity.smEducation != null">
                <if test="entity.smEducation.school != null and entity.smEducation.school!='' ">
                    and sm_edu.school=#{entity.smEducation.school}
                </if>
                <if test="entity.smEducation.college != null and entity.smEducation.college!='' ">
                    and sm_edu.college=#{entity.smEducation.college}
                </if>
                <if test="entity.smEducation.series != null and entity.smEducation.series!='' ">
                    and sm_edu.series=#{entity.smEducation.series}
                </if>
                <if test="entity.smEducation.specialty != null and entity.smEducation.specialty!='' ">
                    and sm_edu.specialty=#{entity.smEducation.specialty}
                </if>
            </if>
            <if test="entity.smHistorydata != null">
                <if test="entity.smHistorydata.otherSchool != null and entity.smHistorydata.otherSchool!='' ">
                    and sm_his_da.other_school=#{entity.smHistorydata.otherSchool}
                </if>
            </if>
        </where>
    </select>

    <!-- 不带分页获取群组条件（带多条件） -->
    <select id="loadListByCondition" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate"
            resultMap="MesGroupSchoolmateMap">
        select
        distinct sm_s.id ,sm_s.user_id,sm_s.name
        <if test='entity.smContact.type == "PHONE" or entity.smContact.type == "EMAIL"'>
               ,sm_c.contact
        </if>
        from sm_schoolmate sm_s
        <if test='entity.smContact.type == "PHONE" or entity.smContact.type == "EMAIL"'>
        	left join sm_contact sm_c on sm_s.user_id = sm_c.user_id and sm_c.flag = #{entity.FLAG_NORMAL}
        </if>
        <if test="entity.smProfession != null">
            left join sm_profession sm_p on sm_s.user_id = sm_p.user_id and sm_p.flag = #{entity.FLAG_NORMAL}
        </if>
        <if test="entity.smEducation != null">
            left join sm_education sm_edu on sm_s.user_id = sm_edu.user_id and sm_edu.flag = #{entity.FLAG_NORMAL}
        </if>
        <where>
            <include refid="query_where_more"></include>
        	<if test='entity.smContact.type == "PHONE" or entity.smContact.type == "EMAIL"'>
        		and sm_c.type=#{entity.smContact.type}
        	</if>
            <if test="entity.smProfession != null">
                <if test="entity.smProfession.country != null and entity.smProfession.country!='' ">
                    and sm_p.country=#{entity.smProfession.country}
                </if>
                <if test="entity.smProfession.district != null and entity.smProfession.district!='' ">
                    and sm_p.district=#{entity.smProfession.district}
                </if>
                <if test="entity.smProfession.province != null and entity.smProfession.province!='' ">
                    and sm_p.province=#{entity.smProfession.province}
                </if>
                <if test="entity.smProfession.city != null and entity.smProfession.city!='' ">
                    and sm_p.city=#{entity.smProfession.city}
                </if>
                <if test="entity.smProfession.workplace != null and entity.smProfession.workplace!='' ">
                    and sm_p.workplace=#{entity.smProfession.workplace}
                </if>
                <if test="entity.smProfession.nature != null and entity.smProfession.nature!='' ">
                    and sm_p.nature=#{entity.smProfession.nature}
                </if>
                <if test="entity.smProfession.industry != null and entity.smProfession.industry!='' ">
                    and sm_p.industry=#{entity.smProfession.industry}
                </if>
                <if test="entity.status != null and entity.status!='' ">
                    and status=#{entity.status}
                </if>
            </if>
            <if test="entity.smEducation != null">
                <if test='entity.smEducation.school != null and entity.smEducation.school!="" and entity.smEducation.college!="0"'>
                    and sm_edu.school=#{entity.smEducation.school}
                </if>
                <if test='entity.smEducation.college != null and entity.smEducation.college!="" and entity.smEducation.college!="0"'>
                    and sm_edu.college=#{entity.smEducation.college}
                </if>
                <if test='entity.smEducation.series != null and entity.smEducation.series!="" and entity.smEducation.series!="0" '>
                    and sm_edu.series=#{entity.smEducation.series}
                </if>
                <if test='entity.smEducation.specialty != null and entity.smEducation.specialty!="" and entity.smEducation.specialty!="0"'>
                    and sm_edu.specialty=#{entity.smEducation.specialty}
                </if>
                <if test="entity.smEducation.startYearInternalFirst != null and entity.smEducation.startYearInternalSencond != null  and entity.smEducation.startYearInternalFirst!=''  and  entity.smEducation.startYearInternalSencond != '' ">
                    and left(str_to_date(sm_edu.startdate, '%Y-%m-%d'),4) between
                    #{entity.smEducation.startYearInternalFirst} and #{entity.smEducation.startYearInternalSencond}
                </if>
                <if test="entity.smEducation.endYearInternalFirst != null and entity.smEducation.endYearInternalFirst!=''  and entity.smEducation.endYearInternalSencond != null and entity.smEducation.endYearInternalSencond!='' ">
                    and left(str_to_date(sm_edu.enddate, '%Y-%m-%d'),4) between
                    #{entity.smEducation.endYearInternalFirst} and #{entity.smEducation.endYearInternalSencond}
                </if>
            </if>
        </where>
    </select>

    <!-- 导出查询 暂无用-->
    <select id="ExportList" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" resultMap="BaseResultMap">
        select
        distinct
        <include refid="Base_Column_List"/>
        ,sm_c.id As smContact_id,sm_c.type As smContact_type,sm_c.contact As smContact_contact,sm_c.create_date

        ,sm_p.id As smProfe_id, sm_p.district As smProfe_district, sm_p.province As smProfe_province, sm_p.end_date As
        smProfe_end_date,
        sm_p.fax As smProfe_fax, sm_p.start_date As smProfe_start_date, sm_p.city As smProfe_city, sm_p.status As
        smProfe_status,
        sm_p.country As smProfe_country, sm_p.telephone As smProfe_telephone, sm_p.industry As smProfe_industry,
        sm_p.department As smProfe_department, sm_p.nature As smProfe_nature, sm_p.workplace As smProfe_workplace,
        sm_p.detail As smProfe_detail, sm_p.position As smProfe_position ,sm_p.create_date

        ,sm_soci.id As smSoci_id, sm_soci.name As smSoci_name, sm_soci.position As smSoci_position, sm_soci.startdate As
        smSoci_startdate, sm_soci.enddate As smSoci_enddate,
        sm_soci.status As smSoci_status,sm_soci.infoval As smSoci_infoval ,sm_soci.create_date

        ,sm_poli.id As smPoli_id, sm_poli.name As smPoli_name, sm_poli.position As smPoli_position, sm_poli.startdate As
        smPoli_startdate,
        sm_poli.enddate As smPoli_enddate, sm_poli.type As smPoli_type,sm_poli.infoval As
        smPoli_infoval,sm_poli.create_date

        ,sm_add.id As smAddress_id, sm_add.province As smAddress_province, sm_add.city As smAddress_city, sm_add.country
        As smAddress_country, sm_add.create_date,
        sm_add.type As smAddress_type,sm_add.detail As smAddress_detail, sm_add.zipcode As smAddress_zipcode,
        sm_add.district As smAddress_district

        ,sm_exper.id As smExper_id, sm_exper.name As smExper_name, sm_exper.position As
        smExper_position,sm_exper.create_date,
        sm_exper.content As smExper_content,sm_exper.start_date As smExper_start_date, sm_exper.end_date As
        smExper_end_date

        ,sm_hon.id As smHon_id, sm_hon.infoval As smHon_infoval, sm_hon.name As smHon_name,sm_hon.type as
        smHon_type,sm_hon.create_date,
        sm_hon.date As smHon_date, sm_hon.industry As smHon_industry

        ,sm_edu.id As smEdu_id, sm_edu.degree_type, sm_edu.temp_specialty, sm_edu.edu_model, sm_edu.school,
        sm_edu.edu_record, sm_edu.schoollen, sm_edu.edu_type, sm_edu.series, sm_edu.classes,
        sm_edu.enddate As edu_enddate, sm_edu.specialty, sm_edu.college, sm_edu.startdate As edu_startdate,
        sm_edu.student_no, sm_edu.degree, sm_edu.temp_series,sm_edu.create_date


        ,sm_his_da.id As smHist_id, sm_his_da.join_date As smHist_join_date ,sm_his_da.native_adress As
        smHist_native_adress,sm_his_da.other_degree as smHist_other_degree,
        sm_his_da.before_school_unit As smHist_before_school_unit,sm_his_da.other_school As smHist_other_school,
        sm_his_da.other_specialty As smHist_other_specialty,
        sm_his_da.degree_date As smHist_degree_date, sm_his_da.person_love As smHist_person_love, sm_his_da.trust_unit
        As smHist_trust_unit,sm_his_da.create_date

        ,sm_faml.id As smFam_id, sm_faml.name As smFam_name, sm_faml.phone As smFam_phone, sm_faml.profession As
        smFam_profession, sm_faml.birthday As smFam_birthday,
        sm_faml.relation As smFam_relation, sm_faml.sex As smFam_sex,sm_faml.isschool As smFam_isschool,
        sm_faml.workplace As smFam_workplace,sm_faml.create_date
        from sm_schoolmate sm_s
        LEFT JOIN sys_user_asso sua ON sm_s.user_id = sua.user_id

        left join sm_contact sm_c on sm_s.user_id = sm_c.user_id

        left join sm_profession sm_p on sm_s.user_id = sm_p.user_id

        left join sm_social sm_soci on sm_s.user_id = sm_soci.user_id

        left join sm_politics sm_poli on sm_s.user_id = sm_poli.user_id

        left join sm_address sm_add on sm_s.user_id = sm_add.user_id

        left join sm_experience sm_exper on sm_s.user_id = sm_exper.user_id

        left join sm_honor sm_hon on sm_s.user_id = sm_hon.user_id

        left join sm_education sm_edu on sm_s.user_id = sm_edu.user_id

        left join sm_history_data sm_his_da on sm_s.user_id = sm_his_da.user_id

        LEFT JOIN sm_family sm_faml ON sm_s.user_id = sm_faml.user_id
        <where>
            <include refid="query_where_more"></include>
            <if test="entity.smContact != null">
                <if test="entity.smContact.contact != null or entity.smContact.type != null">
                    and sm_s.user_id in (SELECT sm_c.user_id FROM sm_contact sm_c WHERE sm_c.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smContact.type != null and entity.type!='' ">
                        and sm_c.type=#{entity.smContact.type}
                    </if>
                    <if test="entity.smContact.contact != null and entity.smContact.contact !='' ">
                        and sm_c.contact=#{entity.smContact.contact}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smProfession != null">
                <if test="entity.smProfession.country != null or entity.smProfession.district != null or
		    	entity.smProfession.nature != null or entity.smProfession.province != null or
		    	entity.smProfession.status != null or entity.smProfession.workplace != null or
			    entity.smProfession.startYearInternalFirst != null or entity.smProfession.startYearInternalSencond != null or
			    entity.smProfession.endYearInternalFirst != null or entity.smProfession.endYearInternalSencond != null
			    or entity.smProfession.position != null  or entity.smProfession.industry != null
			    or entity.smProfession.city != null
		    	">
                    and sm_s.user_id in (SELECT sm_p.user_id FROM sm_profession sm_p WHERE sm_p.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smProfession.country != null and entity.smProfession.country!='' ">
                        and sm_p.country=#{entity.smProfession.country}
                    </if>
                    <if test="entity.smProfession.city != null and entity.smProfession.city !='' ">
                        and sm_p.city=#{entity.smProfession.city}
                    </if>
                    <if test="entity.smProfession.district != null and entity.smProfession.district!='' ">
                        and sm_p.district=#{entity.smProfession.district}
                    </if>
                    <if test="entity.smProfession.province != null and entity.smProfession.province!='' ">
                        and sm_p.province=#{entity.smProfession.province}
                    </if>
                    <if test="entity.smProfession.workplace != null and entity.smProfession.workplace!='' ">
                        and sm_p.workplace like concat('%', #{entity.smProfession.workplace},'%')
                    </if>
                    <if test="entity.smProfession.nature != null and entity.smProfession.nature!='' ">
                        and sm_p.nature=#{entity.smProfession.nature}
                    </if>
                    <if test="entity.smProfession.industry != null and entity.smProfession.industry!='' ">
                        and sm_p.industry=#{entity.smProfession.industry}
                    </if>
                    <if test="entity.smProfession.position != null and entity.smProfession.position !='' ">
                        and sm_p.position=#{entity.smProfession.position}
                    </if>
                    <if test="entity.smProfession.status != null and entity.smProfession.status!='' ">
                        and sm_p.status=#{entity.smProfession.status}
                    </if>
                    <if test="entity.smProfession.startYearInternalFirst != null and   entity.smProfession.startYearInternalSencond != null">
                        and date_format(sm_p.start_date ,'%Y') between #{entity.smProfession.startYearInternalFirst} and
                        #{entity.smProfession.startYearInternalSencond}
                    </if>
                    <if test="entity.smProfession.endYearInternalFirst != null and entity.smProfession.endYearInternalSencond != null">
                        and date_format(sm_p.end_date ,'%Y') between #{entity.smProfession.endYearInternalFirst} and
                        #{entity.smProfession.endYearInternalSencond}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smSocial != null">
                <if test="entity.smSocial.name != null or entity.smSocial.position != null or
		    	entity.smSocial.status != null">
                    and sm_s.user_id in (SELECT sm_soci.user_id FROM sm_social sm_soci WHERE sm_soci.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smSocial.name!=null and entity.smSocial.name!='' ">
                        and sm_soci.name   like concat('%', #{entity.smSocial.name},'%')
                    </if>
                    <if test="entity.smSocial.position != null and entity.smSocial.position!='' ">
                        and sm_soci.position=#{entity.smSocial.position}
                    </if>
                    <if test="entity.smSocial.status != null and entity.smSocial.status!='' ">
                        and sm_soci.status=#{entity.smSocial.status}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smAddress != null">
                <if test="entity.smAddress.country != null or entity.smAddress.district != null or
		   		entity.smAddress.province != null or entity.smAddress.city != null or entity.smAddress.detail != null
		   		or entity.smAddress.type != null
		   		">
                    and sm_s.user_id in (SELECT sm_add.user_id FROM sm_address sm_add WHERE sm_add.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smAddress.country != null and entity.smAddress.country!='' ">
                        and sm_add.country=#{entity.smAddress.country}
                    </if>
                    <if test="entity.smAddress.province != null and entity.smAddress.province!='' ">
                        and sm_add.province=#{entity.smAddress.province}
                    </if>
                    <if test="entity.smAddress.district != null and entity.smAddress.district !='' ">
                        and sm_add.district=#{entity.smAddress.district}
                    </if>
                    <if test="entity.smAddress.city != null and entity.smAddress.city!='' ">
                        and sm_add.city=#{entity.smAddress.city}
                    </if>
                    <if test="entity.smAddress.detail != null and entity.smAddress.detail!='' ">
                        and sm_add.detail like concat('%', #{entity.smAddress.detail},'%')
                    </if>
                    <if test="entity.smAddress.type != null and entity.smAddress.type !='' ">
                        and sm_add.type = #{entity.smAddress.type}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smHonor != null">
                <if test=" entity.smHonor.name != null  or entity.smHonor.startDate != null  or entity.smHonor.endDate != null ">
                    and sm_s.user_id in (SELECT sm_hon.user_id FROM sm_honor sm_hon WHERE sm_hon.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smHonor.name!=null and entity.smHonor.name!='' ">
                        and sm_hon.name like concat('%', #{entity.smHonor.name},'%')
                    </if>
                    <if test="entity.smHonor.startDate != null  and entity.smHonor.endDate != null ">
                        and date_format(sm_hon.date ,'%Y') between #{entity.smHonor.startDate} and
                        #{entity.smHonor.endDate}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smEducation != null">
                <if test="entity.smEducation.school != null or entity.smEducation.college != null or
		   			entity.smEducation.series != null or entity.smEducation.specialty != null or
					entity.smEducation.eduRecord != null or entity.smEducation.degree != null or
					entity.smEducation.schoollen != null or
					entity.smEducation.classes != null or entity.smEducation.studentNo != null or
					entity.smEducation.startYearInternalFirst != null or
					entity.smEducation.endYearInternalFirst != null
		   			">
                    and sm_s.user_id in (SELECT sm_edu.user_id FROM sm_education sm_edu WHERE sm_edu.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smEducation.school != null and entity.smEducation.school!='' ">
                        and sm_edu.school=#{entity.smEducation.school}
                    </if>
                    <if test="entity.smEducation.college != null and entity.smEducation.college!='' ">
                        and sm_edu.college=#{entity.smEducation.college}
                    </if>
                    <if test="entity.smEducation.series != null and entity.smEducation.series!='' ">
                        and sm_edu.series=#{entity.smEducation.series}
                    </if>
                    <if test="entity.smEducation.specialty != null and entity.smEducation.specialty!='' ">
                        and sm_edu.specialty=#{entity.smEducation.specialty}
                    </if>

                    <if test="entity.smEducation.eduRecord != null and entity.smEducation.eduRecord!='' ">
                        and sm_edu.edu_record=#{entity.smEducation.eduRecord}
                    </if>
                    <if test="entity.smEducation.degree != null and entity.smEducation.degree!='' ">
                        and sm_edu.degree=#{entity.smEducation.degree}
                    </if>
                    <if test="entity.smEducation.schoollen != null and entity.smEducation.schoollen!='' ">
                        and sm_edu.schoollen=#{entity.smEducation.schoollen}
                    </if>
                    <if test="entity.smEducation.classes != null and entity.smEducation.classes !='' ">
                        and sm_edu.classes=#{entity.smEducation.classes}
                    </if>
                    <if test="entity.smEducation.studentNo != null and entity.smEducation.studentNo !='' ">
                        and sm_edu.student_no=#{entity.smEducation.studentNo}
                    </if>
                    <if test="entity.smEducation.startYearInternalFirst != null and entity.smEducation.startYearInternalSencond != null  and entity.smEducation.startYearInternalFirst!=''  and  entity.smEducation.startYearInternalSencond != '' ">
                        and date_format(sm_edu.startdate ,'%Y') between #{entity.smEducation.startYearInternalFirst} and
                        #{entity.smEducation.startYearInternalSencond}
                    </if>
                    <if test="entity.smEducation.endYearInternalFirst != null and entity.smEducation.endYearInternalFirst!=''  and entity.smEducation.endYearInternalSencond != null and entity.smEducation.endYearInternalSencond!='' ">
                        and date_format(sm_edu.enddate ,'%Y') between #{entity.smEducation.endYearInternalFirst} and
                        #{entity.smEducation.endYearInternalSencond}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smHistorydata != null">
                <if test="entity.smHistorydata.otherSchool != null or entity.smHistorydata.otherSpecialty!= null or
					entity.smHistorydata.trustUnit!= null or entity.smHistorydata.personLove!= null or
					entity.smHistorydata.otherSchool!= null or entity.smHistorydata.otherDegree!= null or
					entity.smHistorydata.nativeAdress!= null or entity.smHistorydata.beforeSchoolunit != null ">
                    and sm_s.user_id in (SELECT sm_his_da.user_id FROM sm_history_data sm_his_da WHERE sm_his_da.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smHistorydata.otherSchool != null and entity.smHistorydata.otherSchool!='' ">
                        and sm_his_da.other_school like concat('%', #{entity.smHistorydata.otherSchool},'%')
                    </if>
                    <if test="entity.smHistorydata.otherSpecialty != null and entity.smHistorydata.otherSpecialty!='' ">
                        and sm_his_da.other_specialty like concat('%', #{entity.smHistorydata.otherSpecialty},'%')
                    </if>
                    <if test="entity.smHistorydata.trustUnit != null and entity.smHistorydata.trustUnit!='' ">
                        and sm_his_da.trust_unit like concat('%', #{entity.smHistorydata.trustUnit},'%')
                    </if>
                    <if test="entity.smHistorydata.personLove != null and entity.smHistorydata.personLove!='' ">
                        and sm_his_da.person_love like concat('%', #{entity.smHistorydata.personLove},'%')
                    </if>
                    <if test="entity.smHistorydata.otherDegree != null and entity.smHistorydata.otherDegree!='' ">
                        and sm_his_da.other_degree like concat('%', #{entity.smHistorydata.otherDegree},'%')
                    </if>
                    <if test="entity.smHistorydata.nativeAdress != null and entity.smHistorydata.nativeAdress!='' ">
                        and sm_his_da.native_adress like concat('%', #{entity.smHistorydata.nativeAdress},'%')
                    </if>
                    <if test="entity.smHistorydata.beforeSchoolunit != null and entity.smHistorydata.beforeSchoolunit !='' ">
                        and sm_his_da.before_school_unit like concat('%', #{entity.smHistorydata.beforeSchoolunit},'%')
                    </if>
                    )
                </if>
            </if>
        </where>
        order by sm_c.create_date,
        sm_p.create_date,
        sm_soci.create_date,
        sm_add.create_date,
        sm_exper.create_date,
        sm_hon.create_date,
        sm_edu.create_date,
        sm_his_da.create_date,
        sm_faml.create_date
    </select>

    <!-- 多条件以及模糊字段联合查询获取导出的List -->
    <select id="ExportListByCondition" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate"
            resultMap="ExportResultMap">
        select
        distinct
        sm_s.id,
        sm_s.NAME,
        sm_s.sex,
        sm_s.birthday,
        sm_s.user_id,sm_s.create_date

        from sm_schoolmate sm_s
        <where>
            <include refid="query_where_more"></include>
            <if test="entity.smContact != null">
                <if test="entity.smContact.contact != null or entity.smContact.type != null">
                    and sm_s.user_id in (SELECT sm_c.user_id FROM sm_contact sm_c WHERE sm_c.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smContact.type != null and entity.type!='' ">
                        and sm_c.type=#{entity.smContact.type}
                    </if>
                    <if test="entity.smContact.contact != null and entity.smContact.contact !='' ">
                        and sm_c.contact=#{entity.smContact.contact}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smProfession != null">
                <if test="entity.smProfession.country != null or entity.smProfession.district != null or
		    	entity.smProfession.nature != null or entity.smProfession.province != null or
		    	entity.smProfession.status != null or entity.smProfession.workplace != null or
			    entity.smProfession.startYearInternalFirst != null or entity.smProfession.startYearInternalSencond != null or
			    entity.smProfession.endYearInternalFirst != null or entity.smProfession.endYearInternalSencond != null
			    or entity.smProfession.position != null  or entity.smProfession.industry != null
			    or entity.smProfession.city != null
		    	">
                    and sm_s.user_id in (SELECT sm_p.user_id FROM sm_profession sm_p WHERE sm_p.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smProfession.country != null and entity.smProfession.country!='' ">
                        and sm_p.country=#{entity.smProfession.country}
                    </if>
                    <if test="entity.smProfession.city != null and entity.smProfession.city !='' ">
                        and sm_p.city=#{entity.smProfession.city}
                    </if>
                    <if test="entity.smProfession.district != null and entity.smProfession.district!='' ">
                        and sm_p.district=#{entity.smProfession.district}
                    </if>
                    <if test="entity.smProfession.province != null and entity.smProfession.province!='' ">
                        and sm_p.province=#{entity.smProfession.province}
                    </if>
                    <if test="entity.smProfession.workplace != null and entity.smProfession.workplace!='' ">
                        and sm_p.workplace like concat('%', #{entity.smProfession.workplace},'%')
                    </if>
                    <if test="entity.smProfession.nature != null and entity.smProfession.nature!='' ">
                        and sm_p.nature=#{entity.smProfession.nature}
                    </if>
                    <if test="entity.smProfession.industry != null and entity.smProfession.industry!='' ">
                        and sm_p.industry=#{entity.smProfession.industry}
                    </if>
                    <if test="entity.smProfession.position != null and entity.smProfession.position !='' ">
                        and sm_p.position=#{entity.smProfession.position}
                    </if>
                    <if test="entity.smProfession.status != null and entity.smProfession.status!='' ">
                        and sm_p.status=#{entity.smProfession.status}
                    </if>
                    <if test="entity.smProfession.startYearInternalFirst != null and   entity.smProfession.startYearInternalSencond != null">
                        and date_format(sm_p.start_date ,'%Y') between #{entity.smProfession.startYearInternalFirst} and
                        #{entity.smProfession.startYearInternalSencond}
                    </if>
                    <if test="entity.smProfession.endYearInternalFirst != null and entity.smProfession.endYearInternalSencond != null">
                        and date_format(sm_p.end_date ,'%Y') between #{entity.smProfession.endYearInternalFirst} and
                        #{entity.smProfession.endYearInternalSencond}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smSocial != null">
                <if test="entity.smSocial.name != null or entity.smSocial.position != null or
		    	entity.smSocial.status != null">
                    and sm_s.user_id in (SELECT sm_soci.user_id FROM sm_social sm_soci WHERE sm_soci.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smSocial.name!=null and entity.smSocial.name!='' ">
                        and sm_soci.name   like concat('%', #{entity.smSocial.name},'%')
                    </if>
                    <if test="entity.smSocial.position != null and entity.smSocial.position!='' ">
                        and sm_soci.position=#{entity.smSocial.position}
                    </if>
                    <if test="entity.smSocial.status != null and entity.smSocial.status!='' ">
                        and sm_soci.status=#{entity.smSocial.status}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smAddress != null">
                <if test="entity.smAddress.country != null or entity.smAddress.district != null or
		   		entity.smAddress.province != null or entity.smAddress.city != null or entity.smAddress.detail != null
		   		or entity.smAddress.type != null
		   		">
                    and sm_s.user_id in (SELECT sm_add.user_id FROM sm_address sm_add WHERE sm_add.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smAddress.country != null and entity.smAddress.country!='' ">
                        and sm_add.country=#{entity.smAddress.country}
                    </if>
                    <if test="entity.smAddress.province != null and entity.smAddress.province!='' ">
                        and sm_add.province=#{entity.smAddress.province}
                    </if>
                    <if test="entity.smAddress.district != null and entity.smAddress.district !='' ">
                        and sm_add.district=#{entity.smAddress.district}
                    </if>
                    <if test="entity.smAddress.city != null and entity.smAddress.city!='' ">
                        and sm_add.city=#{entity.smAddress.city}
                    </if>
                    <if test="entity.smAddress.detail != null and entity.smAddress.detail!='' ">
                        and sm_add.detail like concat('%', #{entity.smAddress.detail},'%')
                    </if>
                    <if test="entity.smAddress.type != null and entity.smAddress.type !='' ">
                        and sm_add.type = #{entity.smAddress.type}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smHonor != null">
                <if test=" entity.smHonor.name != null  or entity.smHonor.startDate != null  or entity.smHonor.endDate != null ">
                    and sm_s.user_id in (SELECT sm_hon.user_id FROM sm_honor sm_hon WHERE sm_hon.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smHonor.name!=null and entity.smHonor.name!='' ">
                        and sm_hon.name like concat('%', #{entity.smHonor.name},'%')
                    </if>
                    <if test="entity.smHonor.startDate != null  and entity.smHonor.endDate != null ">
                        and date_format(sm_hon.date ,'%Y') between #{entity.smHonor.startDate} and
                        #{entity.smHonor.endDate}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smEducation != null">
                <if test="entity.smEducation.school != null or entity.smEducation.college != null or
		   			entity.smEducation.series != null or entity.smEducation.specialty != null or
					entity.smEducation.eduRecord != null or entity.smEducation.degree != null or
					entity.smEducation.schoollen != null or
					entity.smEducation.classes != null or entity.smEducation.studentNo != null or
					entity.smEducation.startYearInternalFirst != null or
					entity.smEducation.endYearInternalFirst != null
		   			">
                    and sm_s.user_id in (SELECT sm_edu.user_id FROM sm_education sm_edu WHERE sm_edu.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smEducation.school != null and entity.smEducation.school!='' ">
                        and sm_edu.school=#{entity.smEducation.school}
                    </if>
                    <if test="entity.smEducation.college != null and entity.smEducation.college!='' ">
                        and sm_edu.college=#{entity.smEducation.college}
                    </if>
                    <if test="entity.smEducation.series != null and entity.smEducation.series!='' ">
                        and sm_edu.series=#{entity.smEducation.series}
                    </if>
                    <if test="entity.smEducation.specialty != null and entity.smEducation.specialty!='' ">
                        and sm_edu.specialty=#{entity.smEducation.specialty}
                    </if>

                    <if test="entity.smEducation.eduRecord != null and entity.smEducation.eduRecord!='' ">
                        and sm_edu.edu_record=#{entity.smEducation.eduRecord}
                    </if>
                    <if test="entity.smEducation.degree != null and entity.smEducation.degree!='' ">
                        and sm_edu.degree=#{entity.smEducation.degree}
                    </if>
                    <if test="entity.smEducation.schoollen != null and entity.smEducation.schoollen!='' ">
                        and sm_edu.schoollen=#{entity.smEducation.schoollen}
                    </if>
                    <if test="entity.smEducation.classes != null and entity.smEducation.classes !='' ">
                        and sm_edu.classes=#{entity.smEducation.classes}
                    </if>
                    <if test="entity.smEducation.studentNo != null and entity.smEducation.studentNo !='' ">
                        and sm_edu.student_no=#{entity.smEducation.studentNo}
                    </if>
                    <if test="entity.smEducation.startYearInternalFirst != null and entity.smEducation.startYearInternalSencond != null  and entity.smEducation.startYearInternalFirst!=''  and  entity.smEducation.startYearInternalSencond != '' ">
                        and date_format(sm_edu.startdate ,'%Y') between #{entity.smEducation.startYearInternalFirst} and
                        #{entity.smEducation.startYearInternalSencond}
                    </if>
                    <if test="entity.smEducation.endYearInternalFirst != null and entity.smEducation.endYearInternalFirst!=''  and entity.smEducation.endYearInternalSencond != null and entity.smEducation.endYearInternalSencond!='' ">
                        and date_format(sm_edu.enddate ,'%Y') between #{entity.smEducation.endYearInternalFirst} and
                        #{entity.smEducation.endYearInternalSencond}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smHistorydata != null">
                <if test="entity.smHistorydata.otherSchool != null or entity.smHistorydata.otherSpecialty!= null or
					entity.smHistorydata.trustUnit!= null or entity.smHistorydata.personLove!= null or
					entity.smHistorydata.otherSchool!= null or entity.smHistorydata.otherDegree!= null or
					entity.smHistorydata.nativeAdress!= null or entity.smHistorydata.beforeSchoolunit != null ">
                    and sm_s.user_id in (SELECT sm_his_da.user_id FROM sm_history_data sm_his_da WHERE sm_his_da.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smHistorydata.otherSchool != null and entity.smHistorydata.otherSchool!='' ">
                        and sm_his_da.other_school like concat('%', #{entity.smHistorydata.otherSchool},'%')
                    </if>
                    <if test="entity.smHistorydata.otherSpecialty != null and entity.smHistorydata.otherSpecialty!='' ">
                        and sm_his_da.other_specialty like concat('%', #{entity.smHistorydata.otherSpecialty},'%')
                    </if>
                    <if test="entity.smHistorydata.trustUnit != null and entity.smHistorydata.trustUnit!='' ">
                        and sm_his_da.trust_unit like concat('%', #{entity.smHistorydata.trustUnit},'%')
                    </if>
                    <if test="entity.smHistorydata.personLove != null and entity.smHistorydata.personLove!='' ">
                        and sm_his_da.person_love like concat('%', #{entity.smHistorydata.personLove},'%')
                    </if>
                    <if test="entity.smHistorydata.otherDegree != null and entity.smHistorydata.otherDegree!='' ">
                        and sm_his_da.other_degree like concat('%', #{entity.smHistorydata.otherDegree},'%')
                    </if>
                    <if test="entity.smHistorydata.nativeAdress != null and entity.smHistorydata.nativeAdress!='' ">
                        and sm_his_da.native_adress like concat('%', #{entity.smHistorydata.nativeAdress},'%')
                    </if>
                    <if test="entity.smHistorydata.beforeSchoolunit != null and entity.smHistorydata.beforeSchoolunit !='' ">
                        and sm_his_da.before_school_unit like concat('%', #{entity.smHistorydata.beforeSchoolunit},'%')
                    </if>
                    )
                </if>
            </if>


            <if test="fuzzySearchFiled != null and fuzzySearchFiled != ''">
                and (
                sm_s.user_id in (
                SELECT ss.user_id FROM sm_schoolmate ss WHERE ss.flag = "NORMAL"
                and ss.NAME LIKE concat('%', #{fuzzySearchFiled}, '%')
                OR ss.eg_name LIKE concat('%', #{fuzzySearchFiled}, '%')
                OR REPLACE (
                str_to_date(ss.birthday, '%Y-%m-%d'),
                '-',
                ''
                ) LIKE concat('%', #{fuzzySearchFiled}, '%')
                )
                or sm_s.user_id in (SELECT sm_c.user_id FROM sm_contact sm_c WHERE sm_c.flag ="NORMAL" and sm_c.contact
                like concat('%', #{fuzzySearchFiled},'%'))
                or sm_s.user_id in (SELECT sm_p.user_id FROM sm_profession sm_p WHERE sm_p.flag ="NORMAL" and
                sm_p.workplace like concat('%', #{fuzzySearchFiled},'%'))
                or sm_s.user_id in (SELECT sm_edu.user_id FROM sm_education sm_edu WHERE sm_edu.flag = "NORMAL" and (
                replace(str_to_date(sm_edu.enddate, '%Y-%m-%d'),'-','') like concat('%', #{fuzzySearchFiled},'%')
                or replace(str_to_date(sm_edu.startdate, '%Y-%m-%d'),'-','') like concat('%', #{fuzzySearchFiled},'%')
                or sm_edu.college in (SELECT id FROM setting_department WHERE type='COLLEGE' and name LIKE concat( '%',
                #{fuzzySearchFiled}, '%' ))
                or sm_edu.series in (SELECT id FROM setting_department WHERE type='DEPARTMENT' and name LIKE concat(
                '%', #{fuzzySearchFiled}, '%' ))
                or sm_edu.specialty in (SELECT id FROM setting_department WHERE type='MAJOR' and name LIKE concat( '%',
                #{fuzzySearchFiled}, '%' ))))
                )
            </if>
        </where>
        order by
        sm_s.create_date desc
    </select>


    <!-- 多条件以及模糊字段联合查询获取导出的联系方式List -->
    <select id="ExportContactListByCondition" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate"
            resultMap="ExportContactResultMap">
        select
        distinct
        sm_con.id,
        sm_con.type,
        sm_con.contact,
        sm_s.name as name,
        sm_con.create_date
        from sm_contact sm_con
        left join sm_schoolmate sm_s on sm_s.user_id = sm_con.user_id
        <where>
        	sm_con.flag = 'NORMAL'
            <if test="entity.smContact != null">
                <if test="entity.smContact.contact != null or entity.smContact.type != null">
                    <if test="entity.smContact.type != null and entity.type!='' ">
                        and sm_con.type=#{entity.smContact.type}
                    </if>
                </if>
            </if>
            <include refid="query_where_more"></include>
            <if test="entity.smContact != null">
                <if test="entity.smContact.contact != null or entity.smContact.type != null">
                    and sm_s.user_id in (SELECT sm_c.user_id FROM sm_contact sm_c WHERE sm_c.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smContact.type != null and entity.type!='' ">
                        and sm_c.type=#{entity.smContact.type}
                    </if>
                    <if test="entity.smContact.contact != null and entity.smContact.contact !='' ">
                        and sm_c.contact=#{entity.smContact.contact}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smProfession != null">
                <if test="entity.smProfession.country != null or entity.smProfession.district != null or
		    	entity.smProfession.nature != null or entity.smProfession.province != null or
		    	entity.smProfession.status != null or entity.smProfession.workplace != null or
			    entity.smProfession.startYearInternalFirst != null or entity.smProfession.startYearInternalSencond != null or
			    entity.smProfession.endYearInternalFirst != null or entity.smProfession.endYearInternalSencond != null
			    or entity.smProfession.position != null  or entity.smProfession.industry != null
			    or entity.smProfession.city != null
		    	">
                    and sm_s.user_id in (SELECT sm_p.user_id FROM sm_profession sm_p WHERE sm_p.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smProfession.country != null and entity.smProfession.country!='' ">
                        and sm_p.country=#{entity.smProfession.country}
                    </if>
                    <if test="entity.smProfession.city != null and entity.smProfession.city !='' ">
                        and sm_p.city=#{entity.smProfession.city}
                    </if>
                    <if test="entity.smProfession.district != null and entity.smProfession.district!='' ">
                        and sm_p.district=#{entity.smProfession.district}
                    </if>
                    <if test="entity.smProfession.province != null and entity.smProfession.province!='' ">
                        and sm_p.province=#{entity.smProfession.province}
                    </if>
                    <if test="entity.smProfession.workplace != null and entity.smProfession.workplace!='' ">
                        and sm_p.workplace like concat('%', #{entity.smProfession.workplace},'%')
                    </if>
                    <if test="entity.smProfession.nature != null and entity.smProfession.nature!='' ">
                        and sm_p.nature=#{entity.smProfession.nature}
                    </if>
                    <if test="entity.smProfession.industry != null and entity.smProfession.industry!='' ">
                        and sm_p.industry=#{entity.smProfession.industry}
                    </if>
                    <if test="entity.smProfession.position != null and entity.smProfession.position !='' ">
                        and sm_p.position=#{entity.smProfession.position}
                    </if>
                    <if test="entity.smProfession.status != null and entity.smProfession.status!='' ">
                        and sm_p.status=#{entity.smProfession.status}
                    </if>
                    <if test="entity.smProfession.startYearInternalFirst != null and   entity.smProfession.startYearInternalSencond != null">
                        and date_format(sm_p.start_date ,'%Y') between #{entity.smProfession.startYearInternalFirst} and
                        #{entity.smProfession.startYearInternalSencond}
                    </if>
                    <if test="entity.smProfession.endYearInternalFirst != null and entity.smProfession.endYearInternalSencond != null">
                        and date_format(sm_p.end_date ,'%Y') between #{entity.smProfession.endYearInternalFirst} and
                        #{entity.smProfession.endYearInternalSencond}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smSocial != null">
                <if test="entity.smSocial.name != null or entity.smSocial.position != null or
		    	entity.smSocial.status != null">
                    and sm_s.user_id in (SELECT sm_soci.user_id FROM sm_social sm_soci WHERE sm_soci.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smSocial.name!=null and entity.smSocial.name!='' ">
                        and sm_soci.name   like concat('%', #{entity.smSocial.name},'%')
                    </if>
                    <if test="entity.smSocial.position != null and entity.smSocial.position!='' ">
                        and sm_soci.position=#{entity.smSocial.position}
                    </if>
                    <if test="entity.smSocial.status != null and entity.smSocial.status!='' ">
                        and sm_soci.status=#{entity.smSocial.status}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smAddress != null">
                <if test="entity.smAddress.country != null or entity.smAddress.district != null or
		   		entity.smAddress.province != null or entity.smAddress.city != null or entity.smAddress.detail != null
		   		or entity.smAddress.type != null
		   		">
                    and sm_s.user_id in (SELECT sm_add.user_id FROM sm_address sm_add WHERE sm_add.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smAddress.country != null and entity.smAddress.country!='' ">
                        and sm_add.country=#{entity.smAddress.country}
                    </if>
                    <if test="entity.smAddress.province != null and entity.smAddress.province!='' ">
                        and sm_add.province=#{entity.smAddress.province}
                    </if>
                    <if test="entity.smAddress.district != null and entity.smAddress.district !='' ">
                        and sm_add.district=#{entity.smAddress.district}
                    </if>
                    <if test="entity.smAddress.city != null and entity.smAddress.city!='' ">
                        and sm_add.city=#{entity.smAddress.city}
                    </if>
                    <if test="entity.smAddress.detail != null and entity.smAddress.detail!='' ">
                        and sm_add.detail like concat('%', #{entity.smAddress.detail},'%')
                    </if>
                    <if test="entity.smAddress.type != null and entity.smAddress.type !='' ">
                        and sm_add.type = #{entity.smAddress.type}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smHonor != null">
                <if test=" entity.smHonor.name != null  or entity.smHonor.startDate != null  or entity.smHonor.endDate != null ">
                    and sm_s.user_id in (SELECT sm_hon.user_id FROM sm_honor sm_hon WHERE sm_hon.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smHonor.name!=null and entity.smHonor.name!='' ">
                        and sm_hon.name like concat('%', #{entity.smHonor.name},'%')
                    </if>
                    <if test="entity.smHonor.startDate != null  and entity.smHonor.endDate != null ">
                        and date_format(sm_hon.date ,'%Y') between #{entity.smHonor.startDate} and
                        #{entity.smHonor.endDate}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smEducation != null">
                <if test="entity.smEducation.school != null or entity.smEducation.college != null or
		   			entity.smEducation.series != null or entity.smEducation.specialty != null or
					entity.smEducation.eduRecord != null or entity.smEducation.degree != null or
					entity.smEducation.schoollen != null or
					entity.smEducation.classes != null or entity.smEducation.studentNo != null or
					entity.smEducation.startYearInternalFirst != null or
					entity.smEducation.endYearInternalFirst != null
		   			">
                    and sm_s.user_id in (SELECT sm_edu.user_id FROM sm_education sm_edu WHERE sm_edu.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smEducation.school != null and entity.smEducation.school!='' ">
                        and sm_edu.school=#{entity.smEducation.school}
                    </if>
                    <if test="entity.smEducation.college != null and entity.smEducation.college!='' ">
                        and sm_edu.college=#{entity.smEducation.college}
                    </if>
                    <if test="entity.smEducation.series != null and entity.smEducation.series!='' ">
                        and sm_edu.series=#{entity.smEducation.series}
                    </if>
                    <if test="entity.smEducation.specialty != null and entity.smEducation.specialty!='' ">
                        and sm_edu.specialty=#{entity.smEducation.specialty}
                    </if>

                    <if test="entity.smEducation.eduRecord != null and entity.smEducation.eduRecord!='' ">
                        and sm_edu.edu_record=#{entity.smEducation.eduRecord}
                    </if>
                    <if test="entity.smEducation.degree != null and entity.smEducation.degree!='' ">
                        and sm_edu.degree=#{entity.smEducation.degree}
                    </if>
                    <if test="entity.smEducation.schoollen != null and entity.smEducation.schoollen!='' ">
                        and sm_edu.schoollen=#{entity.smEducation.schoollen}
                    </if>
                    <if test="entity.smEducation.classes != null and entity.smEducation.classes !='' ">
                        and sm_edu.classes=#{entity.smEducation.classes}
                    </if>
                    <if test="entity.smEducation.studentNo != null and entity.smEducation.studentNo !='' ">
                        and sm_edu.student_no=#{entity.smEducation.studentNo}
                    </if>
                    <if test="entity.smEducation.startYearInternalFirst != null and entity.smEducation.startYearInternalSencond != null  and entity.smEducation.startYearInternalFirst!=''  and  entity.smEducation.startYearInternalSencond != '' ">
                        and date_format(sm_edu.startdate ,'%Y') between #{entity.smEducation.startYearInternalFirst} and
                        #{entity.smEducation.startYearInternalSencond}
                    </if>
                    <if test="entity.smEducation.endYearInternalFirst != null and entity.smEducation.endYearInternalFirst!=''  and entity.smEducation.endYearInternalSencond != null and entity.smEducation.endYearInternalSencond!='' ">
                        and date_format(sm_edu.enddate ,'%Y') between #{entity.smEducation.endYearInternalFirst} and
                        #{entity.smEducation.endYearInternalSencond}
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smHistorydata != null">
                <if test="entity.smHistorydata.otherSchool != null or entity.smHistorydata.otherSpecialty!= null or
					entity.smHistorydata.trustUnit!= null or entity.smHistorydata.personLove!= null or
					entity.smHistorydata.otherSchool!= null or entity.smHistorydata.otherDegree!= null or
					entity.smHistorydata.nativeAdress!= null or entity.smHistorydata.beforeSchoolunit != null ">
                    and sm_s.user_id in (SELECT sm_his_da.user_id FROM sm_history_data sm_his_da WHERE sm_his_da.flag =
                    #{entity.FLAG_NORMAL}
                    <if test="entity.smHistorydata.otherSchool != null and entity.smHistorydata.otherSchool!='' ">
                        and sm_his_da.other_school like concat('%', #{entity.smHistorydata.otherSchool},'%')
                    </if>
                    <if test="entity.smHistorydata.otherSpecialty != null and entity.smHistorydata.otherSpecialty!='' ">
                        and sm_his_da.other_specialty like concat('%', #{entity.smHistorydata.otherSpecialty},'%')
                    </if>
                    <if test="entity.smHistorydata.trustUnit != null and entity.smHistorydata.trustUnit!='' ">
                        and sm_his_da.trust_unit like concat('%', #{entity.smHistorydata.trustUnit},'%')
                    </if>
                    <if test="entity.smHistorydata.personLove != null and entity.smHistorydata.personLove!='' ">
                        and sm_his_da.person_love like concat('%', #{entity.smHistorydata.personLove},'%')
                    </if>
                    <if test="entity.smHistorydata.otherDegree != null and entity.smHistorydata.otherDegree!='' ">
                        and sm_his_da.other_degree like concat('%', #{entity.smHistorydata.otherDegree},'%')
                    </if>
                    <if test="entity.smHistorydata.nativeAdress != null and entity.smHistorydata.nativeAdress!='' ">
                        and sm_his_da.native_adress like concat('%', #{entity.smHistorydata.nativeAdress},'%')
                    </if>
                    <if test="entity.smHistorydata.beforeSchoolunit != null and entity.smHistorydata.beforeSchoolunit !='' ">
                        and sm_his_da.before_school_unit like concat('%', #{entity.smHistorydata.beforeSchoolunit},'%')
                    </if>
                    )
                </if>
            </if>
            <if test="fuzzySearchFiled != null and fuzzySearchFiled != ''">
                and (
                sm_con.user_id in (
                SELECT ss.user_id FROM sm_conchoolmate ss WHERE ss.flag = "NORMAL"
                and ss.NAME LIKE concat('%', #{fuzzySearchFiled}, '%')
                OR ss.eg_name LIKE concat('%', #{fuzzySearchFiled}, '%')
                OR REPLACE (
                str_to_date(ss.birthday, '%Y-%m-%d'),
                '-',
                ''
                ) LIKE concat('%', #{fuzzySearchFiled}, '%')
                )
                or sm_con.user_id in (SELECT sm_c.user_id FROM sm_contact sm_c WHERE sm_c.flag ="NORMAL" and sm_c.contact
                like concat('%', #{fuzzySearchFiled},'%'))
                or sm_con.user_id in (SELECT sm_p.user_id FROM sm_profession sm_p WHERE sm_p.flag ="NORMAL" and
                sm_p.workplace like concat('%', #{fuzzySearchFiled},'%'))
                or sm_con.user_id in (SELECT sm_edu.user_id FROM sm_education sm_edu WHERE sm_edu.flag = "NORMAL" and (
                replace(str_to_date(sm_edu.enddate, '%Y-%m-%d'),'-','') like concat('%', #{fuzzySearchFiled},'%')
                or replace(str_to_date(sm_edu.startdate, '%Y-%m-%d'),'-','') like concat('%', #{fuzzySearchFiled},'%')
                or sm_edu.college in (SELECT id FROM setting_department WHERE type='COLLEGE' and name LIKE concat( '%',
                #{fuzzySearchFiled}, '%' ))
                or sm_edu.series in (SELECT id FROM setting_department WHERE type='DEPARTMENT' and name LIKE concat(
                '%', #{fuzzySearchFiled}, '%' ))
                or sm_edu.specialty in (SELECT id FROM setting_department WHERE type='MAJOR' and name LIKE concat( '%',
                #{fuzzySearchFiled}, '%' ))))
                )
            </if>
        </where>
        order by
        sm_con.create_date desc
    </select>


    <!-- 根据ID获取某个校友所有信息 -->
    <select id="getUserINfoById" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        ,sm_c.id As smContact_id,sm_c.type As smContact_type,sm_c.contact As smContact_contact
        ,sm_p.id As smProfe_id, sm_p.district As smProfe_district, sm_p.province As smProfe_province, sm_p.end_date As
        smProfe_end_date,
        sm_p.fax As smProfe_fax, sm_p.start_date As smProfe_start_date, sm_p.city As smProfe_city, sm_p.status As
        smProfe_status,
        sm_p.country As smProfe_country, sm_p.telephone As smProfe_telephone, sm_p.industry As smProfe_industry,
        sm_p.department As smProfe_department, sm_p.nature As smProfe_nature, sm_p.workplace As smProfe_workplace,
        sm_p.detail As smProfe_detail, sm_p.position As smProfe_position

        ,sm_soci.id As smSoci_id, sm_soci.name As smSoci_name, sm_soci.position As smSoci_position, sm_soci.startdate As
        smSoci_startdate, sm_soci.enddate As smSoci_enddate,
        sm_soci.status As smSoci_status,sm_soci.infoval As smSoci_infoval

        ,sm_poli.id As smPoli_id, sm_poli.name As smPoli_name, sm_poli.position As smPoli_position, sm_poli.startdate As
        smPoli_startdate,
        sm_poli.enddate As smPoli_enddate, sm_poli.type As smPoli_type,sm_poli.infoval As smPoli_infoval

        ,sm_add.id As smAddress_id, sm_add.province As smAddress_province, sm_add.city As smAddress_city, sm_add.country
        As smAddress_country,
        sm_add.type As smAddress_type,sm_add.detail As smAddress_detail, sm_add.zipcode As smAddress_zipcode,
        sm_add.district As smAddress_district

        ,sm_exper.id As smExper_id, sm_exper.name As smExper_name, sm_exper.position As smExper_position,
        sm_exper.content As smExper_content,sm_exper.start_date As smExper_start_date, sm_exper.end_date As
        smExper_end_date

        ,sm_hon.id As smHon_id, sm_hon.infoval As smHon_infoval, sm_hon.name As smHon_name,sm_hon.type as smHon_type,
        sm_hon.date As smHon_date, sm_hon.industry As smHon_industry

        ,sm_edu.id As smEdu_id, sm_edu.degree_type, sm_edu.temp_specialty, sm_edu.edu_model, sm_edu.school,
        sm_edu.edu_record, sm_edu.schoollen, sm_edu.edu_type, sm_edu.series, sm_edu.classes,
        sm_edu.enddate As edu_enddate, sm_edu.specialty, sm_edu.college, sm_edu.startdate As edu_startdate,
        sm_edu.student_no, sm_edu.degree, sm_edu.temp_series

        ,sm_his_da.id As smHist_id, sm_his_da.join_date As smHist_join_date ,sm_his_da.native_adress As
        smHist_native_adress,sm_his_da.other_degree as smHist_other_degree,
        sm_his_da.before_school_unit As smHist_before_school_unit,sm_his_da.other_school As smHist_other_school,
        sm_his_da.other_specialty As smHist_other_specialty,
        sm_his_da.degree_date As smHist_degree_date, sm_his_da.person_love As smHist_person_love, sm_his_da.trust_unit
        As smHist_trust_unit

        ,sm_faml.id As smFam_id, sm_faml.name As smFam_name, sm_faml.phone As smFam_phone, sm_faml.profession As
        smFam_profession, sm_faml.birthday As smFam_birthday,
        sm_faml.relation As smFam_relation, sm_faml.sex As smFam_sex,sm_faml.isschool As smFam_isschool,
        sm_faml.workplace As smFam_workplace
        from sm_schoolmate sm_s

        left join sm_contact sm_c on sm_s.user_id = sm_c.user_id and sm_c.flag = #{entity.FLAG_NORMAL}

        left join sm_profession sm_p on sm_s.user_id = sm_p.user_id and sm_p.flag = #{entity.FLAG_NORMAL}

        left join sm_social sm_soci on sm_s.user_id = sm_soci.user_id and sm_soci.flag = #{entity.FLAG_NORMAL}

        left join sm_politics sm_poli on sm_s.user_id = sm_poli.user_id and sm_poli.flag = #{entity.FLAG_NORMAL}

        left join sm_address sm_add on sm_s.user_id = sm_add.user_id and sm_add.flag = #{entity.FLAG_NORMAL}

        left join sm_experience sm_exper on sm_s.user_id = sm_exper.user_id and sm_exper.flag = #{entity.FLAG_NORMAL}

        left join sm_honor sm_hon on sm_s.user_id = sm_hon.user_id and sm_hon.flag = #{entity.FLAG_NORMAL}

        left join sm_education sm_edu on sm_s.user_id = sm_edu.user_id and sm_edu.flag = #{entity.FLAG_NORMAL}

        left join sm_history_data sm_his_da on sm_s.user_id = sm_his_da.user_id and sm_his_da.flag =
        #{entity.FLAG_NORMAL}

        LEFT JOIN sm_family sm_faml ON sm_s.user_id = sm_faml.user_id and sm_faml.flag = #{entity.FLAG_NORMAL}
        <where>
            <include refid="query_where_more"></include>
        </where>
    </select>

    <!-- 依照条件查询所有对象 -->
    <select id="loadAllListBy" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_schoolmate sm_s
        <where>
            <include refid="query_where"></include>
        </where>
    </select>

    <!-- 查询当天过生日的人 -->
    <select id="loadListByBirth" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_schoolmate sm_s
        <where>
            <include refid="query_where_byBirth"></include>
        </where>
    </select>

    <!-- 删除对象 -->
    <update id="delete" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate">
    	update sm_schoolmate set flag = #{FLAG_HOLD} where id = #{id,jdbcType=VARCHAR}
  	</update>

    <!-- 插入数据 -->
    <insert id="insert" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate">
        insert into sm_schoolmate
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="complete != null">
                complete,
            </if>
            <if test="markIds != null">
                mark_ids,
            </if>
            <if test="posLat != null">
                pos_lat,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="marks != null">
                marks,
            </if>
            <if test="posLong != null">
                pos_long,
            </if>
            <if test="donFee != null">
                don_fee,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="egName != null">
                eg_name,
            </if>
            <if test="nation != null">
                nation,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="cardId != null">
                card_id,
            </if>
            <if test="flag != null">
                flag,
            </if>
            <if test="openid != null">
                openid,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="cardNum != null">
                card_num,
            </if>
            <if test="pinyin != null">
                pinyin,
            </if>
            <if test="truePhoto != null">
                true_photo,
            </if>
            <if test="cardStatus != null">
                card_status,
            </if>
            <if test="isShow != null">
                is_show,
            </if>
            <if test="point != null">
                point,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="cardType != null">
                card_type,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="posCity != null">
                pos_city,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="politics != null">
                politics,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="complete != null">
                #{complete,jdbcType=INTEGER},
            </if>
            <if test="markIds != null">
                #{markIds,jdbcType=VARCHAR},
            </if>
            <if test="posLat != null">
                #{posLat,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="marks != null">
                #{marks,jdbcType=VARCHAR},
            </if>
            <if test="posLong != null">
                #{posLong,jdbcType=VARCHAR},
            </if>
            <if test="donFee != null">
                #{donFee,jdbcType=DECIMAL},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="egName != null">
                #{egName,jdbcType=VARCHAR},
            </if>
            <if test="nation != null">
                #{nation,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="cardId != null">
                #{cardId,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=VARCHAR},
            </if>
            <if test="openid != null">
                #{openid,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="cardNum != null">
                #{cardNum,jdbcType=VARCHAR},
            </if>
            <if test="pinyin != null">
                #{pinyin,jdbcType=VARCHAR},
            </if>
            <if test="truePhoto != null">
                #{truePhoto,jdbcType=VARCHAR},
            </if>
            <if test="cardStatus != null">
                #{cardStatus,jdbcType=VARCHAR},
            </if>
            <if test="isShow != null">
                #{isShow,jdbcType=VARCHAR},
            </if>
            <if test="point != null">
                #{point,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="cardType != null">
                #{cardType,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                #{level,jdbcType=INTEGER},
            </if>
            <if test="posCity != null">
                #{posCity,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="politics != null">
                #{politics,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!-- 更新数据 -->
    <update id="update" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate">
        update sm_schoolmate
        <set>
            <if test="complete != null">
                complete = #{complete,jdbcType=INTEGER},
            </if>
            <if test="markIds != null">
                mark_ids = #{markIds,jdbcType=VARCHAR},
            </if>
            <if test="posLat != null">
                pos_lat = #{posLat,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="marks != null">
                marks = #{marks,jdbcType=VARCHAR},
            </if>
            <if test="posLong != null">
                pos_long = #{posLong,jdbcType=VARCHAR},
            </if>
            <if test="donFee != null">
                don_fee = #{donFee,jdbcType=DECIMAL},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="egName != null">
                eg_name = #{egName,jdbcType=VARCHAR},
            </if>
            <if test="nation != null">
                nation = #{nation,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="cardId != null">
                card_id = #{cardId,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                flag = #{flag,jdbcType=VARCHAR},
            </if>
            <if test="openid != null">
                openid = #{openid,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="cardNum != null">
                card_num = #{cardNum,jdbcType=VARCHAR},
            </if>
            <if test="pinyin != null">
                pinyin = #{pinyin,jdbcType=VARCHAR},
            </if>
            <if test="truePhoto != null">
                true_photo = #{truePhoto,jdbcType=VARCHAR},
            </if>
            <if test="cardStatus != null">
                card_status = #{cardStatus,jdbcType=VARCHAR},
            </if>
            <if test="isShow != null">
                is_show = #{isShow,jdbcType=VARCHAR},
            </if>
            <if test="point != null">
                point = #{point,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="cardType != null">
                card_type = #{cardType,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="posCity != null">
                pos_city = #{posCity,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="politics != null">
                politics = #{politics,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>


    <!-- 根据标签获取校友列表 -->
    <select id="loadSmsByMark" parameterType="com.mpri.aio.schoolmate.model.SmMark" resultMap="BaseResultMap">
		select
			id ,marks ,mark_ids
		from
		sm_schoolmate sm_s
		where sm_s.user_id in (
			   SELECT
		sms.sys_user_id
			FROM
		sm_mark_schoolmate sms
		     where
		     sms.mark_id = #{id,jdbcType=VARCHAR}
		)
 	</select>

    <!-- 更新数据完整度 -->
    <update id="updateComplete" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate">

        update sm_schoolmate
        <set>
            <if test="complete != null">
                complete = #{complete,jdbcType=INTEGER},
            </if>
        </set>
        where user_id = #{userId} and flag = #{FLAG_NORMAL}
    </update>

    <!-- 通过userId删除校友 -->
    <update id="deleteOldSm" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate">
    	update sm_schoolmate set flag = #{FLAG_HOLD} where user_id = #{userId,jdbcType=VARCHAR} and flag = #{FLAG_NORMAL}
  	</update>

    <!-- 校友取消标签 -->
    <delete id="deleteUserMark">
		delete from sm_mark_schoolmate where
		sys_user_id=#{userId}
	</delete>

    <!-- 删除校友和校友关系 -->
    <delete id="deleteSysAs" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate">
		DELETE FROM sys_user_asso  where user_id = #{userId,jdbcType=VARCHAR}
	</delete>

    <!-- 校友设置标签 -->
    <insert id="insertUserMark">
        insert into sm_mark_schoolmate(mark_id, sys_user_id)
        <foreach collection="markList" item="mark" separator=" union all ">
            select
            #{mark.id},#{userId}
            from dual
        </foreach>
    </insert>


    <select id="getListCompare"
            parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate"
            resultMap="BaseResultMap">
        select
        distinct
        <include refid="Base_Column_List"/>
        from sm_schoolmate sm_s
        <where>
            <include refid="compare_query_where"/>
        </where>
        ORDER BY sm_s.create_date DESC
    </select>

    <select id="getListLike"
            parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate"
            resultMap="BaseResultMap">
        select
        distinct
        <include refid="Base_Column_List"/>
        from sm_schoolmate sm_s
        LEFT JOIN sm_education sm_e on sm_s.user_id = sm_e.user_id
        <where>
            <include refid="like_query_where"/>
        </where>
        ORDER BY create_date DESC
    </select>


    <sql id="compare_query_where">
        and sm_s.flag = #{FLAG_NORMAL} and (
        <!--  1.姓名+身份证号码-->
        (name = #{name} and
        card_num=#{cardNum}
        and card_type =#{cardType}
        )
        <!-- 2.姓名+生日 -->
        or
        (name = #{name} and

        date_format(birthday ,'%Y-%m-%d')= (select DATE_FORMAT(#{birthday},'%Y-%m-%d'))
        )

        <if test="smEducation != null">
            <!-- 3.姓名+学号 -->
            or
            (name = #{name} and (sm_s.user_id in (select user_id from sm_education sm_e where
            sm_e.student_no= #{smEducation.studentNo}
            )) )
            <!-- 4.姓名+入学年+学院+系+专业 -->
            or
            (name = #{name} and (sm_s.user_id in (select user_id from sm_education sm_e where
            date_format(startdate ,'%Y')= (select DATE_FORMAT(#{smEducation.startdate},'%Y'))

            and college=#{smEducation.college}

            and series=#{smEducation.series}

            and specialty=#{smEducation.specialty}

            )) )
            <!-- 5.姓名+毕业年+学院+系+专业 -->
            or
            (name = #{name} and (sm_s.user_id in (select user_id from sm_education sm_e where
            date_format(enddate ,'%Y')= (select DATE_FORMAT(#{smEducation.enddate},'%Y'))
            and college=#{smEducation.college}
            and series=#{smEducation.series}
            and specialty=#{smEducation.specialty}

            )) )
        </if>
        )
    </sql>

    <sql id="like_query_where">
        <if test="userId!=null and userId !='' ">and sm_s.user_id != #{userId}</if>
        <if test="name!=null and name !='' ">and name like concat('%', #{name},'%')</if>
        <!-- 		<if test="sex != null and sex !='' ">and sex=#{sex}</if>
                <if test="cardNum != null and cardNum !='' ">and card_num=#{cardNum}</if>
                <if test="cardType != null and cardType !='' ">and card_type=#{cardType}</if>
                <if test="smEducation.school != null and smEducation.school !='' ">and school=#{smEducation.school}</if>
                <if test="smEducation.college != null and smEducation.college !='' ">and college=#{smEducation.college}</if>
                <if test="smEducation.specialty != null and smEducation.specialty !='' ">and specialty=#{smEducation.specialty}</if>
                <if test="smEducation.series != null and smEducation.series !='' ">and series=#{smEducation.series}</if>
                <if test="smEducation.startdate != null ">and startdate=#{smEducation.startdate}</if>
                <if test="smEducation.enddate != null  ">and enddate=#{smEducation.enddate}</if> -->
        <!-- 		<if test="smEducation.isDefault != null ">and is_default=#{smEducation.isDefault}</if> -->
        <if test="flag != null and flag!='' ">and sm_s.flag = #{FLAG_NORMAL}</if>
    </sql>


    <!-- 根据校友的信息和教育经历 -->
    <select id="getUserEduInfo" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>

        ,sm_edu.id As smEdu_id, sm_edu.degree_type, sm_edu.temp_specialty, sm_edu.edu_model, sm_edu.school,
        sm_edu.edu_record, sm_edu.schoollen, sm_edu.edu_type, sm_edu.series, sm_edu.classes,
        sm_edu.enddate As edu_enddate, sm_edu.specialty, sm_edu.college, sm_edu.startdate As edu_startdate,
        sm_edu.student_no, sm_edu.degree, sm_edu.temp_series

        from sm_schoolmate sm_s

        left join sm_education sm_edu on sm_s.user_id = sm_edu.user_id and sm_edu.flag = #{entity.FLAG_NORMAL}

        <where>
            <include refid="query_where_more"></include>
        </where>

        order by sm_s.id desc limit 1
    </select>


    <select id="getListCompareByUserId"
            parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate"
            resultMap="BaseResultMap">
        select
        distinct
        <include refid="Base_Column_List"/>
        from sm_schoolmate sm_s
        <where>
            <include refid="compareByUserId_query_where"/>
        </where>

        ORDER BY sm_s.create_date DESC
    </select>


    <sql id="compareByUserId_query_where">
        and sm_s.user_id <![CDATA[!= ]]> #{userId,jdbcType=VARCHAR} and sm_s.flag = #{FLAG_NORMAL} and (
        <!--  1.姓名+身份证号码-->
        (name = #{name} and
        card_num=#{cardNum}
        and card_type =#{cardType}
        )
        <!-- 2.姓名+生日 -->
        or
        (name = #{name} and
        date_format(birthday ,'%Y-%m-%d')= (select DATE_FORMAT(#{birthday},'%Y-%m-%d'))
        )

        <if test="smEducations!= null">
            <foreach item="item" index="index" collection="smEducations">
                <!-- 3.姓名+学号 -->
                or
                (name = #{name} and (sm_s.user_id in (select user_id from sm_education sm_e where
                sm_e.student_no= #{item.studentNo}
                )) )
                <!-- 4.姓名+入学年+学院+系+专业 -->
                or
                (name = #{name} and (sm_s.user_id in (select user_id from sm_education sm_e where
                <if test="item.startdate!= null">
                    date_format(startdate ,'%Y')= (select DATE_FORMAT(#{item.startdate},'%Y'))
                </if>
                <if test="item.startdate == null">
                    startdate is null
                </if>
                and college=#{item.college}
                and series=#{item.series}
                and specialty=#{item.specialty}
                )) )
                <!-- 5.姓名+毕业年+学院+系+专业 -->
                or
                (name = #{name} and (sm_s.user_id in (select user_id from sm_education sm_e where


                <if test="item.enddate!= null">
                    date_format(enddate ,'%Y')= (select DATE_FORMAT(#{item.enddate},'%Y'))
                </if>
                <if test="item.enddate == null">
                    enddate is null
                </if>
                and college=#{item.college}
                and series=#{item.series}
                and specialty=#{item.specialty}
                )) )

                <!-- 6.姓名+入学年+临时系+临时专业 -->
                or
                (name = #{name} and (sm_s.user_id in (select user_id from sm_education sm_e where
                <if test="item.startdate!= null">
                    date_format(startdate ,'%Y')= (select DATE_FORMAT(#{item.startdate},'%Y'))
                </if>
                <if test="item.startdate == null">
                    startdate is null
                </if>

                and temp_series=#{item.tempSeries}

                and temp_specialty=#{item.tempSpecialty}
                )) )
                <!-- 6.姓名+毕业年+临时系+临时专业 -->
                or
                (name = #{name} and (sm_s.user_id in (select user_id from sm_education sm_e where


                <if test="item.enddate!= null">
                    date_format(enddate ,'%Y')= (select DATE_FORMAT(#{item.enddate},'%Y'))
                </if>
                <if test="item.enddate == null">
                    enddate is null
                </if>

                and temp_series=#{item.tempSeries}

                and temp_specialty=#{item.tempSpecialty}

                )) )
            </foreach>
        </if>
        )
    </sql>
    <!-- 获取有身份证的 -->
    <select id="getListByCardNum" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_schoolmate sm_s
        where card_type ='IDCARD' and card_num is not null and card_num <![CDATA[!= ]]> '' and flag = #{FLAG_NORMAL}
    </select>
    <!-- 分页查询（校友网组件使用）  parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" -->
    <select id="getSchoolmateInfo" resultMap="SchoolmatInfoResultMap">
        select
        distinct
        sm_s.id,sm_s.create_date,sm_s.marks,sm_s.name,sm_s.sex,sm_s.user_id ,sm_s.true_photo from sm_schoolmate sm_s
        <where>
            sm_s.flag ="NORMAL"

            <if test="entity.sex != null and entity.sex!='' ">
                and sm_s.sex=#{entity.sex}
            </if>
            <if test="entity.birthday != null">
                and date_format(birthday ,'%Y-%m-%d')= (select DATE_FORMAT(#{entity.birthday},'%Y-%m-%d'))
            </if>
            <if test="entity.politics  != null and entity.politics !='' ">
                and sm_s.politics = #{entity.politics }
            </if>
            <if test="entity.markIds != null and entity.markIds!='' ">
                and sm_s.user_id in (select sys_user_id from sm_mark_schoolmate where mark_id in (SELECT id FROM sm_mark
                WHERE flag = "NORMAL" AND NAME = #{entity.markIds}))
            </if>
            <if test="entity.smEducation != null">
                <if test="(entity.smEducation.college != null and entity.smEducation.college != '' ) or
		   			(entity.smEducation.series != null and entity.smEducation.series != '' ) or
		   			(entity.smEducation.specialty != null and entity.smEducation.specialty != '' ) or
		   			entity.smEducation.startdate != null or
		   			entity.smEducation.enddate != null">
                    and sm_s.user_id in (SELECT sm_edu.user_id FROM sm_education sm_edu WHERE sm_edu.flag =
                    #{entity.FLAG_NORMAL}

                    <if test="entity.smEducation.college != null and entity.smEducation.college!='' ">
                        and sm_edu.college IN (SELECT id FROM setting_department WHERE type = 'COLLEGE' AND NAME LIKE
                        concat('%', #{entity.smEducation.college}, '%'))
                    </if>
                    <if test="entity.smEducation.series != null and entity.smEducation.series!='' ">
                        and sm_edu.series IN (SELECT id FROM setting_department WHERE type = 'DEPARTMENT' AND NAME LIKE
                        concat('%', #{entity.smEducation.series}, '%'))
                    </if>
                    <if test="entity.smEducation.specialty != null and entity.smEducation.specialty!='' ">
                        and sm_edu.specialty IN (SELECT id FROM setting_department WHERE type = 'MAJOR' AND NAME LIKE
                        concat('%', #{entity.smEducation.specialty}, '%'))
                    </if>
                    <if test="entity.smEducation.startdate != null  ">
                        and date_format(sm_edu.startdate ,'%Y')= (select
                        DATE_FORMAT(#{entity.smEducation.startdate},'%Y'))
                    </if>
                    <if test="entity.smEducation.enddate != null  ">
                        and date_format(sm_edu.enddate ,'%Y')= (select DATE_FORMAT(#{entity.smEducation.enddate},'%Y'))
                    </if>
                    )
                </if>
            </if>
            <if test="entity.smAddress != null">
                <if test="(entity.smAddress.country != null and entity.smAddress.country != '') or
		   			(entity.smAddress.province != null and entity.smAddress.province != '') or
		   			(entity.smAddress.district != null and entity.smAddress.district != '')">
                    and sm_s.user_id in (SELECT sm_add.user_id FROM sm_address sm_add WHERE sm_add.flag =
                    #{entity.FLAG_NORMAL}

                    <if test="entity.smAddress.country != null and entity.smAddress.country!='' ">
                        and sm_add.country IN (SELECT id FROM sys_area WHERE type = 'COUNTRY' AND NAME LIKE concat('%',
                        #{entity.smAddress.country}, '%'))
                    </if>
                    <if test="entity.smAddress.province != null and entity.smAddress.province!='' ">
                        and sm_add.province IN (SELECT id FROM sys_area WHERE type = 'PROVINCE' AND NAME LIKE
                        concat('%', #{entity.smAddress.province}, '%'))
                    </if>
                    <if test="entity.smAddress.district != null and entity.smAddress.district!='' ">
                        and sm_add.district IN (SELECT id FROM sys_area WHERE type = 'CITY' AND NAME LIKE concat('%',
                        #{entity.smAddress.district}, '%'))
                    </if>

                    )
                </if>
            </if>

            <if test="entity.smHonor != null">
                <if test="entity.smHonor.name != null  and entity.smHonor.name != '' ">
                    and sm_s.user_id in (SELECT sm_hon.user_id FROM sm_honor sm_hon WHERE sm_hon.flag =
                    #{entity.FLAG_NORMAL}
                    and sm_hon.name =#{entity.smHonor.name}
                    )
                </if>
            </if>
        </where>
        order by sm_s.create_date DESC
    </select>

    <select id="getSchoolmateByPhone" parameterType="com.mpri.aio.schoolmate.model.SmContact"
            resultMap="SchoolmatInfoResultMap">
        select
        distinct
        sm_s.id,sm_s.create_date,sm_s.marks,sm_s.name,sm_s.sex,sm_s.user_id ,sm_s.true_photo from sm_schoolmate sm_s
        <where>
            sm_s.flag ="NORMAL"
            <if test="entity != null">
                <if test=" entity.contact != null  and entity.contact != '' ">
                    and sm_s.user_id in (SELECT sm_con.user_id FROM sm_contact sm_con WHERE sm_con.flag =
                    #{entity.FLAG_NORMAL}
                    and sm_con.contact =#{entity.contact}
                    and sm_con.type =#{entity.type}
                    )
                </if>
            </if>
        </where>
        order by sm_s.create_date DESC
    </select>

	<update id="updatePinyin" parameterType="com.mpri.aio.schoolmate.model.SmSchoolmate" >
		update sm_schoolmate set pinyin = #{pinyin} where id = #{id,jdbcType=VARCHAR} 
	</update>
</mapper>
